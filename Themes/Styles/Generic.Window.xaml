<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Controls.Common="clr-namespace:Imagin.Controls.Common;assembly=Imagin.Controls.Common"
    xmlns:Controls.Common.Extensions="clr-namespace:Imagin.Controls.Common.Extensions;assembly=Imagin.Controls.Common"
    xmlns:Controls.Extended="clr-namespace:Imagin.Controls.Extended;assembly=Imagin.Controls.Extended"
    xmlns:Common.Extensions="clr-namespace:Imagin.Common.Extensions;assembly=Imagin.Common">
    <!-- ............................................... Buttons -->
    
    <Style x:Key="Style.Window.Button" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Controls.Common:MaskedImage 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            ImageColor="{TemplateBinding Foreground}"
                            Source="{Binding Content, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.Foreground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.MouseOver.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.Pressed.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.Pressed.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ............................................... Windows -->

    <Style x:Key="Style.Window" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}" />
        <Setter Property="Icon" Value="/Manifest.ico"/>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Padding" Value="10"/>
        <Setter Property="ShowInTaskbar" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Active.Border}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
    <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}" BasedOn="{StaticResource Style.Window}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Controls.Common.Extensions:WindowExtensions.OverridesDefaultBehavior" Value="True"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="35"
                    CornerRadius="0"
                    GlassFrameThickness="0,0,0,1"
                    ResizeBorderThickness="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border 
                        x:Name="PART_Border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
                        <Grid x:Name="LayoutRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid 
                                    Margin="10,0" 
                                    VerticalAlignment="Center">
                                    <Controls.Common:MaskedImage Source="{Binding Path=(Controls.Common.Extensions:WindowExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                                <Grid 
                                    Grid.Column="1" 
                                    x:Name="PART_TitleGrid" 
                                    Background="Transparent"
                                    Common.Extensions:ControlExtensions.IsDragMoveEnabled="True">
                                    <TextBlock 
                                        x:Name="titleTextBlock" 
                                        Margin="0,-1,0,0" 
                                        Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                        TextTrimming="CharacterEllipsis" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource Brush.Text}" 
                                        FontSize="13"/>
                                </Grid>
                                <StackPanel
                                    Grid.Column="2" 
                                    Orientation="Horizontal" 
                                    VerticalAlignment="Top"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button 
                                        x:Name="PART_MinimizeButton"
                                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                                        Content="pack://application:,,,/Imagin.Themes;component/Images/Minus.png"
                                        Style="{DynamicResource Style.Window.Button}"
                                        ToolTip="{l:Loc Minimize}"/>
                                    <Grid>
                                        <Button 
                                            x:Name="PART_RestoreButton" 
                                            Command="{x:Static SystemCommands.RestoreWindowCommand}"
                                            Content="pack://application:,,,/Imagin.Themes;component/Images/Restore.png"
                                            Style="{DynamicResource Style.Window.Button}"
                                            ToolTip="{l:Loc Restore}"/>
                                        <Button 
                                            x:Name="PART_MaximizeButton" 
                                            Command="{x:Static SystemCommands.MaximizeWindowCommand}"
                                            Style="{DynamicResource Style.Window.Button}"
                                            ToolTip="{l:Loc Maximize}" 
                                            Content="pack://application:,,,/Imagin.Themes;component/Images/Maximize.png"/>
                                    </Grid>
                                    <Button 
                                        x:Name="PART_CloseButton"
                                        Command="{x:Static SystemCommands.CloseWindowCommand}"
                                        Content="pack://application:,,,/Imagin.Themes;component/Images/X.png"
                                        Style="{DynamicResource Style.Window.Button}"
                                        ToolTip="{l:Loc Close}"/>
                                </StackPanel>
                            </Grid>
                            <AdornerDecorator Grid.Row="1" >
                                <Border 
                                    x:Name="ContentBorder" 
                                    BorderBrush="{DynamicResource Brush.Border.BorderBrush}"
                                    BorderThickness="0,1,0,0"
                                    Padding="{TemplateBinding Padding}">
                                    <ContentPresenter />
                                </Border>
                            </AdornerDecorator>

                            <Path 
                                Grid.Row="1" 
                                x:Name="ResizeGrip" 
                                Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3"
                                Height="12" 
                                HorizontalAlignment="Right" 
                                Margin="0,0,4,4" 
                                Stroke="{TemplateBinding Foreground}" 
                                StrokeThickness="1" 
                                Stretch="None" 
                                VerticalAlignment="Bottom"
                                Visibility="Collapsed"
                                Width="12"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <Style x:Key="Style.BasicWindow" TargetType="{x:Type Controls.Common:BasicWindow}" BasedOn="{StaticResource Style.Window}">
        <Setter Property="ContentBorderBrush" Value="{DynamicResource Brush.Window.Content.Border}"/>
        <Style.Triggers>
            <Trigger Property="Controls.Common:BasicWindow.Type" Value="Window">
                <Setter Property="ContentBorderThickness" Value="1"/>
                <Setter Property="ContentMargin" Value="5,0,5,5"/>
            </Trigger>
            <Trigger Property="Controls.Common:BasicWindow.Type" Value="Tool">
                <Setter Property="ContentBorderThickness" Value="0,1,0,0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Controls.Common:BasicWindow}" TargetType="{x:Type Controls.Common:BasicWindow}" BasedOn="{StaticResource Style.BasicWindow}"/>

    <Style x:Key="{x:Type Controls.Common:Gadget}" TargetType="{x:Type Controls.Common:BasicWindow}">
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>
    
    <!-- ............................................... Dialogs -->

    <Style x:Key="Style.BrushDialog.Footer" TargetType="Border">
        <Setter Property="Background" Value="#05000000"/>
        <Setter Property="BorderBrush" Value="#15000000"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Margin" Value="-10,10,-10,0"/>
        <Setter Property="Padding" Value="7"/>
    </Style>
    
    <Style x:Key="Style.BrushDialog" TargetType="{x:Type Controls.Common:BasicWindow}" BasedOn="{StaticResource Style.BasicWindow}">
        <Setter Property="Padding" Value="10,10,10,0"/>
    </Style>

    <Style x:Key="{x:Type Controls.Extended:ColorDialog}" TargetType="{x:Type Controls.Extended:ColorDialog}" BasedOn="{StaticResource Style.BrushDialog}">
        <Setter Property="FooterStyle" Value="{StaticResource Style.BrushDialog.Footer}"/>
    </Style>

    <Style x:Key="{x:Type Controls.Extended:GradientDialog}" TargetType="{x:Type Controls.Extended:GradientDialog}" BasedOn="{StaticResource Style.BrushDialog}">
        <Setter Property="FooterStyle" Value="{StaticResource Style.BrushDialog.Footer}"/>
    </Style>
</ResourceDictionary>