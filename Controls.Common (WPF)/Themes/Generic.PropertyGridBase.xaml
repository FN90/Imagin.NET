<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Imagin.Controls.Common"
    xmlns:Common="http://imagin.tech/imagin/common"
    xmlns:Common.Portable="clr-namespace:Imagin.Common;assembly=Imagin.Common"
    xmlns:Converters="clr-namespace:Imagin.Controls.Common.Converters"
    xmlns:Linq="clr-namespace:Imagin.Controls.Common.Linq"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:System.2="clr-namespace:System;assembly=System"
    xmlns:System.Collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:System.ComponentModel="clr-namespace:System.ComponentModel;assembly=System"
    xmlns:System.Net="clr-namespace:System.Net;assembly=System"
    xmlns:System.Windows="clr-namespace:System.Windows;assembly=WindowsBase"
    xmlns:System.Windows.Media="clr-namespace:System.Windows.Media;assembly=PresentationCore">
    <Style TargetType="local:PropertyGridBase">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PropertyGridBase}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <Common:BindingProxy x:Key="BindingProxy"  Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PropertyGridBase}}}"/>

                            <!-- //////////////////////////////////////////////////////////////////// [Converters] -->

                            <Common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                            <Common:EnumToCollectionConverter x:Key="EnumToCollectionConverter"/>
                            <Common:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                            <Common:LocalizationConverter x:Key="LocalizationConverter"/>
                            <Common:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
                            <Common:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
                            <Common:StartsWithToVisibilityMultiValueConverter x:Key="StartsWithToVisibilityMultiValueConverter"/>
                            <Converters:FeaturedPropertyVisibilityConverter x:Key="FeaturedPropertyVisibilityConverter"/>
                            
                            <!-- //////////////////////////////////////////////////////////////////// [Styles] -->

                            <Style x:Key="Style.Cell"
                                TargetType="{x:Type DataGridCell}" 
                                BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Setter Property="Padding" Value="10,1"/>
                            </Style>

                            <Style x:Key="Style.DataGrid.Row"
                               TargetType="{x:Type DataGridRow}">
                                <Setter Property="TextElement.Foreground" Value="{Binding Foreground, ElementName=PART_PropertyGrid}" />
                                <Setter Property="Visibility">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource StartsWithToVisibilityMultiValueConverter}" BindingGroupName="{x:Null}">
                                            <Binding Converter="{StaticResource LocalizationConverter}" Path="DisplayName"/>
                                            <Binding Path="Data.SearchQuery" Source="{StaticResource BindingProxy}"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                                            <Condition Property="IsMouseOver" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="Selector.IsSelectionActive" Value="True" />
                                            <Condition Property="IsMouseOver" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False" />
                                            <Condition Property="ItemsControl.AlternationIndex" Value="0" />
                                            <Condition Property="IsMouseOver" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False" />
                                            <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                                            <Condition Property="IsMouseOver" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="Style.DataGrid.GroupHeader"
                               TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander Header="{Binding Name}" IsExpanded="{Binding CollapseGroups, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:PropertyGrid}}, Converter={StaticResource InverseBooleanConverter}}">
                                                <ItemsPresenter/>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <!-- //////////////////////////////////////////////////////////////////// [Templates] -->

                            <DataTemplate x:Key="DataTemplate.Property.View">
                                <ContentControl Content="{Binding Mode=OneWay}">
                                    <ContentControl.ContentTemplateSelector>
                                        <local:PropertyTemplateSelector>
                                            <local:PropertyTemplateSelector.Resources>
                                                <ResourceDictionary>
                                                    <!-- //////////////////////////////////////////////////////////////////////// [Converters] -->

                                                    <Common:ColorToHexConverter x:Key="BooleanToVisibilityConverter"/>
                                                    <Common:DisplayNameAttributeConverter x:Key="DisplayNameAttributeConverter"/>
                                                    <Common:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                                                    <Common:FileSizeMultiValueConverter x:Key="FileSizeMultiValueConverter"/>
                                                    <Common:RelativeTimeConverter x:Key="RelativeTimeConverter"/>
                                                    <Common:SolidColorBrushToHexConverter x:Key="SolidColorBrushToHexConverter"/>

                                                    <!-- //////////////////////////////////////////////////////////////////////// [Templates] -->

                                                    <DataTemplate x:Key="{x:Type System:Boolean}">
                                                        <CheckBox 
                                                            HorizontalAlignment="Left" 
                                                            IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Margin="0,5"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Byte}">
                                                        <local:ByteUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:Color}">
                                                        <Grid IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <local:ColorChip
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                Width="25" 
                                                                Height="25" 
                                                                Margin="0,0,5,0"/>
                                                            <local:HexBox
                                                                Grid.Column="1"  
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                MaxLength="8"
                                                                Text="{Binding Value, Mode=TwoWay, Converter={StaticResource ColorToHexConverter}, UpdateSourceTrigger=LostFocus}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Collections:IList}">
                                                        <Grid/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:DateTime}">
                                                        <ContentControl 
                                                            x:Name="PART_Content"
                                                            Content="{Binding Mode=OneWay}">
                                                            <ContentControl.ContentTemplate>
                                                                <DataTemplate>
                                                                    <local:DateTimeUpDown 
                                                                        HorizontalAlignment="Stretch"
                                                                        Maximum="{Binding Maximum}"
                                                                        Minimum="{Binding Minimum}"
                                                                        Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTemplate>
                                                            </ContentControl.ContentTemplate>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                                                    <Condition Binding="{Binding Format}" Value="Default"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <TextBlock
                                                                                Margin="0,5"
                                                                                Text="{Binding Value, Mode=OneWay}"
                                                                                ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                                                    <Condition Binding="{Binding Format}" Value="Relative"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <TextBlock
                                                                                Margin="0,5"
                                                                                Text="{Binding Value, Converter={StaticResource RelativeTimeConverter}, Mode=OneWay}"
                                                                                TextTrimming="CharacterEllipsis"
                                                                                ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Decimal}">
                                                        <local:DecimalUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Double}">
                                                        <local:DoubleUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Enum}">
                                                        <ContentControl x:Name="PART_Content">
                                                            <ComboBox
                                                                IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                ItemsSource="{Common:EnumerateBinding Value}" 
                                                                SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                VirtualizingPanel.IsVirtualizing="True" 
                                                                VirtualizingPanel.VirtualizationMode="Recycling">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <local:LocalizedTextBlock 
                                                                            Text="{Binding Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                            TextTrimming="CharacterEllipsis"/>
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format}" Value="Flags">
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <local:FlagCheckView
                                                                            Flags="{Binding Value,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                            Margin="0,10,0,0">
                                                                            <local:FlagCheckView.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <StackPanel/>
                                                                                </ItemsPanelTemplate>
                                                                            </local:FlagCheckView.ItemsPanel>
                                                                            <local:FlagCheckView.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <CheckBox
                                                                                        IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                        Margin="0,0,0,10">
                                                                                        <CheckBox.Content>
                                                                                            <local:LocalizedTextBlock 
                                                                                                Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                                                TextTrimming="CharacterEllipsis"/>
                                                                                        </CheckBox.Content>
                                                                                        <CheckBox.ToolTip>
                                                                                            <local:LocalizedTextBlock 
                                                                                                Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"/>
                                                                                        </CheckBox.ToolTip>
                                                                                    </CheckBox>
                                                                                </DataTemplate>
                                                                            </local:FlagCheckView.ItemTemplate>
                                                                        </local:FlagCheckView>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                                                    <Condition Binding="{Binding Format}" Value="Default"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <local:LocalizedTextBlock 
                                                                            Margin="0,5"
                                                                            Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                            TextTrimming="CharacterEllipsis">
                                                                            <local:LocalizedTextBlock.ToolTip>
                                                                                <local:LocalizedTextBlock Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"/>
                                                                            </local:LocalizedTextBlock.ToolTip>
                                                                        </local:LocalizedTextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Int16}">
                                                        <local:Int16UpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Int32}">
                                                        <local:Int32UpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Int64}">
                                                        <ContentControl x:Name="PART_Content">
                                                            <local:Int64UpDown 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Maximum="{Binding Maximum}"
                                                                Minimum="{Binding Minimum}"
                                                                StringFormat="{Binding StringFormat}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format}" Value="FileSize">
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <TextBlock Margin="0,10">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource FileSizeMultiValueConverter}">
                                                                                    <Binding Path="Value" Mode="OneWay"/>
                                                                                    <Binding Path="Data.FileSizeFormat" Source="{StaticResource BindingProxy}"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:LinearGradientBrush}">
                                                        <local:GradientChip 
                                                            Height="25"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            Width="Auto"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Guid}">
                                                        <local:RegexBox 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                            Pattern="^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
                                                            Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Net:NetworkCredential}">
                                                        <StackPanel IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                                                            <local:TextBox
                                                                Margin="0,0,0,5"
                                                                Placeholder="{l:Loc Username}"
                                                                Text="{Binding Value.UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <local:TextBox
                                                                IsCharacterMaskingEnabled="True"
                                                                Placeholder="{l:Loc Password}"
                                                                ShowToggleButton="True"
                                                                Text="{Binding Value.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Object}">
                                                        <ContentControl
                                                            Content="{Binding Mode=OneWay}"
                                                            ContentStringFormat="{Binding Data.NestedPropertyStringFormat, Source={StaticResource BindingProxy}}"
                                                            ContentTemplate="{Binding Data.NestedPropertyTemplate, Source={StaticResource BindingProxy}}"
                                                            ContentTemplateSelector="{Binding Data.NestedPropertyTemplateSelector, Source={StaticResource BindingProxy}}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows:Point}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <local:DoubleUpDown 
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Margin="0,0,5,0"
                                                                Minimum="{Binding Minimum.X}"
                                                                StringFormat="{Binding StringFormat}"
                                                                ToolTip="{l:Loc X}"
                                                                Value="{Binding Variant.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <local:DoubleUpDown 
                                                                Grid.Column="1"
                                                                Grid.Row="1"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Minimum="{Binding Minimum.Y}"
                                                                StringFormat="{Binding StringFormat}"
                                                                ToolTip="{l:Loc Y}"
                                                                Value="{Binding Variant.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows:Size}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>

                                                            <local:DoubleUpDown
                                                                x:Name="PART_Width"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Minimum="0"
                                                                StringFormat="{Binding StringFormat}"
                                                                ToolTip="{l:Loc Width}"
                                                                Value="{Binding Variant.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                            <local:MaskedToggleButton
                                                                Grid.Column="1"
                                                                CheckedToolTip="{l:Loc Imagin.Controls.Common:Main:Unbind}"
                                                                Padding="7,0"
                                                                Source="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/LinkHorizontal.png"
                                                                ToolTip="{l:Loc Imagin.Controls.Common:Main:Bind}"/>
                                                            <local:DoubleUpDown
                                                                Grid.Column="2"
                                                                x:Name="PART_Height"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Minimum="0"
                                                                StringFormat="{Binding StringFormat}"
                                                                ToolTip="{l:Loc Height}"
                                                                Value="{Binding Variant.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.Windows.Media:SolidColorBrush}">
                                                        <Grid IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <local:ColorChip
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                Width="25" 
                                                                Height="25" 
                                                                Margin="0,0,5,0"/>
                                                            <local:HexBox
                                                                Grid.Column="1"  
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                MaxLength="8"
                                                                Text="{Binding Value, Mode=TwoWay, Converter={StaticResource SolidColorBrushToHexConverter}, UpdateSourceTrigger=LostFocus}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Single}">
                                                        <local:FloatUpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:String}">
                                                        <ContentControl 
                                                            x:Name="PART_Content"
                                                            Content="{Binding Mode=OneWay}">
                                                            <ContentControl.ContentTemplate>
                                                                <DataTemplate>
                                                                    <local:TextBox 
                                                                        HorizontalAlignment="Stretch"
                                                                        IsClearEnabled="True"
                                                                        IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                                        Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </DataTemplate>
                                                            </ContentControl.ContentTemplate>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="FilePath">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:FileBox  
                                                                                BrowseMode="OpenFile"
                                                                                CanBrowse="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                                HorizontalAlignment="Stretch"
                                                                                IsClearEnabled="True"
                                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="FolderPath">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:FileBox  
                                                                                BrowseMode="OpenFolder"
                                                                                CanBrowse="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                                HorizontalAlignment="Stretch"
                                                                                IsClearEnabled="True"
                                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="Multiline">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:TextBox 
                                                                                AcceptsReturn="True"
                                                                                Height="Auto"
                                                                                HorizontalAlignment="Stretch"
                                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                                                Padding="5,7"
                                                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                                TextBlock.LineStackingStrategy="BlockLineHeight"
                                                                                TextBlock.LineHeight="15"
                                                                                VerticalContentAlignment="Top"
                                                                                TextWrapping="Wrap"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="Password">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:TextBox 
                                                                                IsCharacterMaskingEnabled="True"
                                                                                IsClearEnabled="True"
                                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                ShowToggleButton="True"
                                                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                                HorizontalAlignment="Stretch"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Format, UpdateSourceTrigger=PropertyChanged}" Value="Tokens">
                                                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <local:TokenView 
                                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                                HorizontalAlignment="Stretch"
                                                                                TokensSource="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                                TokenStyle="{Binding Data.TokenStyle, Source={StaticResource BindingProxy}}">
                                                                            </local:TokenView>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:UInt16}">
                                                        <local:UInt16UpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:UInt32}">
                                                        <local:UInt32UpDown 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Maximum="{Binding Maximum}"
                                                            Minimum="{Binding Minimum}"
                                                            StringFormat="{Binding StringFormat}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:UInt64}">
                                                        <ContentControl x:Name="PART_Content">
                                                            <local:UInt64UpDown 
                                                                HorizontalAlignment="Stretch"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                                Maximum="{Binding Maximum}"
                                                                Minimum="{Binding Minimum}"
                                                                StringFormat="{Binding StringFormat}"
                                                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </ContentControl>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Format }" Value="FileSize">
                                                                <Setter TargetName="PART_Content" Property="Content">
                                                                    <Setter.Value>
                                                                        <TextBlock Margin="0,10">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource FileSizeMultiValueConverter}">
                                                                                    <Binding Path="Value" Mode="OneWay"/>
                                                                                    <Binding Path="Data.FileSizeFormat" Source="{StaticResource BindingProxy}"/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System.2:Uri}">
                                                        <local:UriBox 
                                                            HorizontalAlignment="Stretch"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                    <DataTemplate x:Key="{x:Type System:Version}">
                                                        <local:VersionBox
                                                            HorizontalAlignment="Stretch"
                                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    </DataTemplate>
                                                </ResourceDictionary>
                                            </local:PropertyTemplateSelector.Resources>
                                        </local:PropertyTemplateSelector>
                                    </ContentControl.ContentTemplateSelector>
                                </ContentControl>
                            </DataTemplate>
                        </Border.Resources>
                        <Grid DataContext="{Binding Data, Source={StaticResource BindingProxy}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- ////////////////////////////////// [Header] -->
                            <Grid 
                                IsEnabled="{Binding Source, Converter={StaticResource NullToBooleanConverter}}"
                                Linq:PanelExtensions.Spacing="0,0,10,0"
                                Linq:PanelExtensions.TrimLast="True"
                                Visibility="{Binding ShowHeader, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- Custom Buttons -->
                                <ItemsControl
                                    ItemsSource="{Binding Buttons}"
                                    VerticalAlignment="Center">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ContentPresenter Content="{Binding Mode=OneWay}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <!-- Default Buttons -->

                                <local:MaskedButton
                                    Grid.Column="1"
                                    Command="{Binding RewindNestCommand}"
                                    Source="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/ArrowLeftRound.png"
                                    ToolTip="{l:Loc Imagin.Controls.Common.Wpf:Main:Back}"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"/>
                                <local:MaskedToggleButton
                                    Grid.Column="2"
                                    CheckedToolTip="{l:Loc Imagin.Controls.Common.Wpf:Main:HideCategories}"
                                    IsChecked="{Binding ShowCategories}"
                                    Source="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/Category.png"
                                    ToolTip="{l:Loc Imagin.Controls.Common.Wpf:Main:ShowCategories}"
                                    VerticalAlignment="Center"/>
                                <local:MaskedDropDownButton
                                    Grid.Column="3"
                                    Source="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/Sort.png"
                                    ToolTip="{l:Loc Imagin.Controls.Common.Wpf:Main:Sort}"
                                    VerticalAlignment="Center">
                                    <local:MaskedDropDownButton.DropDown>
                                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:Name}" 
                                                IsCheckable="True" 
                                                IsChecked="{Binding SortByName, UpdateSourceTrigger=PropertyChanged}" 
                                                Linq:MenuItemExtensions.GroupName="SortName"
                                                StaysOpenOnClick="True"/>
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:Type}" 
                                                IsCheckable="True" 
                                                IsChecked="{Binding SortByType, UpdateSourceTrigger=PropertyChanged}"
                                                Linq:MenuItemExtensions.GroupName="SortName"
                                                StaysOpenOnClick="True"/>
                                            <Separator/>
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:Ascending}" 
                                                IsCheckable="True" 
                                                IsChecked="{Binding IsSortAscending, UpdateSourceTrigger=PropertyChanged}" 
                                                Linq:MenuItemExtensions.GroupName="SortDirection"
                                                StaysOpenOnClick="True"/>
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:Descending}"
                                                IsCheckable="True" 
                                                IsChecked="{Binding IsSortDescending, UpdateSourceTrigger=PropertyChanged}" 
                                                Linq:MenuItemExtensions.GroupName="SortDirection"
                                                StaysOpenOnClick="True"/>
                                        </ContextMenu>
                                    </local:MaskedDropDownButton.DropDown>
                                </local:MaskedDropDownButton>
            
                                <!-- Search -->
                                <local:MaskedImage
                                    Grid.Column="4"
                                    Source="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/Search.png"/>
                                <local:TextBox
                                    Grid.Column="5"
                                    IsClearEnabled="True"
                                    Padding="0"
                                    Placeholder="{l:Loc Imagin.Controls.Common.Wpf:Main:Search}"
                                    Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ToolTip="{l:Loc Imagin.Controls.Common.Wpf:Main:Search}"
                                    Background="Transparent"
                                    BorderThickness="0"/>

                                <!-- Options -->
                                <local:MaskedDropDownButton
                                    Grid.Column="6"
                                    Padding="5,0"
                                    Source="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/ArrowDown.png"
                                    ToolTip="{l:Loc Imagin.Controls.Common.Wpf:Main:Options}"
                                    VerticalAlignment="Stretch"
                                    VerticalContentAlignment="Center">
                                    <local:MaskedDropDownButton.DropDown>
                                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:CollapseGroups}" 
                                                IsCheckable="True"
                                                IsChecked="{Binding CollapseGroups}"
                                                StaysOpenOnClick="True"/>
                                            <Separator/>
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:Disconnect}" 
                                                Command="{Binding DisconnectSourceCommand}"/>
                                            <MenuItem 
                                                Header="{l:Loc Imagin.Controls.Common.Wpf:Main:Reset}" 
                                                Command="{Binding ResetSourceCommand}"/>
                                        </ContextMenu>
                                    </local:MaskedDropDownButton.DropDown>
                                </local:MaskedDropDownButton>
                            </Grid>
                            
                            <!-- ////////////////////////////////// [Body] -->
                            <Grid
                                Grid.Row="1">
                                <!-- ////////////////////////////// [Loader] -->
                                <ContentControl
                                    ContentTemplate="{Binding LoaderTemplate}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Grid
                                    Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- ////////////////////////// [Type] -->
                                    <Grid  
                                        Margin="10,5"
                                        Visibility="{Binding Source, Converter={StaticResource NullToVisibilityConverter}}">
                                        <ContentControl
                                            Content="{Binding Source}"
                                            ContentStringFormat="{Binding TypeStringFormat}"
                                            ContentTemplate="{Binding TypeTemplate}"
                                            ContentTemplateSelector="{Binding TypeTemplateSelector}"
                                            Visibility="{Binding ShowType, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </Grid>

                                    <!-- ////////////////////////// [Featured] -->
                                    <Grid 
                                        Grid.Row="1"
                                        Margin="10,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.Visibility>
                                            <MultiBinding Converter="{StaticResource FeaturedPropertyVisibilityConverter}">
                                                <Binding Path="ShowFeatured"/>
                                                <Binding Path="Properties.Featured"/>
                                            </MultiBinding>
                                        </Grid.Visibility>

                                        <local:LocalizedTextBlock
                                            Margin="0,0,10,0" 
                                            Text="{Binding Properties.Featured.DisplayName, Mode=OneWay}"
                                            VerticalAlignment="Center"/>
                                        <ContentControl
                                            Grid.Column="1"
                                            Content="{Binding Properties.Featured, Mode=OneWay}"
                                            ContentTemplate="{StaticResource DataTemplate.Property.View}"/>
                                    </Grid>

                                    <!-- ////////////////////////// [DataGrid] -->
                                    <DataGrid
                                        Grid.Row="2"
                                        AutoGenerateColumns="False"
                                        CanUserAddRows="False"
                                        CanUserDeleteRows="False"
                                        CellStyle="{StaticResource Style.Cell}"
                                        GridLinesVisibility="{Binding GridLinesVisibility}"
                                        HeadersVisibility="{Binding HeadersVisibility}"
                                        IsEnabled="{Binding IsSourceEnabled}"
                                        ItemContainerStyle="{StaticResource Style.DataGrid.Row}"
                                        ItemsSource="{Binding ListCollectionView, IsAsync=True, Mode=OneWay}"
                                        Margin="{Binding Padding}"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                        SelectedValue="{Binding Properties.ActiveProperty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectionMode="Single"
                                        Style="{Binding DataGridStyle, Mode=OneWay}">
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn
                                                Header="Name"
                                                SortMemberPath="DisplayName" 
                                                Width="{Binding Data.PropertyColumnWidth, Source={StaticResource BindingProxy}}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <local:LocalizedTextBlock
                                                            Text="{Binding DisplayName, Mode=OneWay}"
                                                            TextTrimming="CharacterEllipsis"
                                                            ToolTip="{Binding LocalizedText, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                                            VerticalAlignment="Center"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn 
                                                CellTemplate="{StaticResource DataTemplate.Property.View}"
                                                Header="Value" 
                                                Width="{Binding Data.ValueColumnWidth, Source={StaticResource BindingProxy}}"/>
                                        </DataGrid.Columns>
                                        <DataGrid.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="GroupItem">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                    <Expander 
                                                                        IsExpanded="{Binding CollapseGroups, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:PropertyGrid}}, Converter={StaticResource InverseBooleanConverter}}" 
                                                                        HorizontalAlignment="Stretch">
                                                                        <Expander.Header>
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <TextBlock
                                                                                    Text="{Binding Name, Mode=OneWay}"/>
                                                                                <TextBlock 
                                                                                    Opacity="0.5"
                                                                                    Text="{Binding ItemCount, Mode=OneWay, StringFormat={} ({0})}"/>
                                                                            </StackPanel>
                                                                        </Expander.Header>
                                                                        <ItemsPresenter/>
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                                <GroupStyle.Panel>
                                                    <ItemsPanelTemplate>
                                                        <DataGridRowsPresenter/>
                                                    </ItemsPanelTemplate>
                                                </GroupStyle.Panel>
                                            </GroupStyle>
                                        </DataGrid.GroupStyle>
                                    </DataGrid>
                                </Grid>
                            </Grid>
        
                            <!-- ////////////////////////////////// [Footer] -->
                            <GridSplitter
                                Grid.Row="2"
                                x:Name="PART_Splitter"
                                ResizeDirection="Rows"
                                Style="{Binding SplitterStyle}"/>
                            <ContentControl 
                                Grid.Row="3"
                                Content="{Binding Properties.ActiveProperty}"
                                ContentStringFormat="{Binding DescriptionStringFormat}"
                                ContentTemplate="{Binding DescriptionTemplate}"
                                ContentTemplateSelector="{Binding DescriptionTemplateSelector}"
                                Visibility="{Binding DescriptionVisibility}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>