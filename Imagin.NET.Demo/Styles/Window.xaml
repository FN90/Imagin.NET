<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Imagin.NET.Demo"
    xmlns:Controls.Common="clr-namespace:Imagin.Controls.Common;assembly=Imagin.Controls.Common"
    xmlns:Controls.Extended="clr-namespace:Imagin.Controls.Extended;assembly=Imagin.Controls.Extended"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="Style.Window.Button" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="25" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource WindowButtonBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource WindowButtonBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WindowButtonForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonMouseOverBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource WindowButtonMouseOverBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WindowButtonMouseOverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowButtonPressedBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource WindowButtonPressedBorderBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource WindowButtonPressedForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Style.Window.MinimizeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Style.Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                        <Path 
                                    Data="M0,6 L8,6 Z"
                                    Width="8" 
                                    Height="13" 
                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                    StrokeThickness="2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.Window.RestoreButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Style.Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Background="{TemplateBinding Background}">
                        <Controls.Common:MaskedImage 
                            Source="/Images/Restore.png" 
                            ImageWidth="10" 
                            ImageHeight="10" 
                            ImageColor="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.Window.MaximizeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Style.Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                        <Path 
                                    Data="M0,1 L9,1 L9,8 L0,8 Z" 
                                    Width="9" 
                                    Height="8" 
                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                    StrokeThickness="2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.Window.CloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Style.Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                        <Path 
                                    Data="M0,0 L8,7 M8,0 L0,7 Z" 
                                    Width="8" 
                                    Height="9" 
                                    StrokeStartLineCap="Round"
                                    StrokeEndLineCap="Round"
                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                    StrokeThickness="1.5"
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center">
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Template.Window" TargetType="{x:Type Window}">
        <Border 
            x:Name="PART_Border" 
            Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" 
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="LayoutRoot">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Margin="10,0" VerticalAlignment="Center">
                        <Controls.Common:MaskedImage 
                            Source="{TemplateBinding Icon}"/>
                    </Grid>
                    <Grid 
                        Grid.Column="1" 
                        x:Name="PART_TitleGrid">
                        <TextBlock
                            Text="{TemplateBinding Title}" 
                            TextTrimming="CharacterEllipsis" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}" 
                            FontSize="{TemplateBinding FontSize}"/>
                    </Grid>
                    <Controls.Common:Spacer 
                        Grid.Column="3"
                        WindowChrome.IsHitTestVisibleInChrome="True" 
                        Orientation="Horizontal" 
                        VerticalAlignment="Top">
                        <Button 
                            x:Name="PART_MinimizeButton"
                            ToolTip="Minimize" 
                            Style="{DynamicResource Style.Window.MinimizeButton}"/>
                        <Button 
                            x:Name="PART_RestoreButton" 
                            ToolTip="Restore" 
                            Style="{DynamicResource Style.Window.RestoreButton}"/>
                        <Button 
                            x:Name="PART_MaximizeButton" 
                            ToolTip="Maximize" 
                            Style="{DynamicResource Style.Window.MaximizeButton}"/>
                        <Button 
                            x:Name="PART_CloseButton"
                            ToolTip="Close" 
                            Style="{DynamicResource Style.Window.CloseButton}"/>
                    </Controls.Common:Spacer>
                </Grid>
                <Border 
                    x:Name="ContentBorder" 
                    Grid.Row="1" 
                    Grid.RowSpan="2" 
                    Margin="{TemplateBinding Margin}"
                    Padding="{TemplateBinding Padding}"
                    BorderThickness="1"
                    BorderBrush="#33000000">
                    <ContentPresenter />
                </Border>
                <Path 
                    Grid.Row="1" 
                    x:Name="ResizeGrip" 
                    Width="12" 
                    Height="12" 
                    Margin="0,0,4,4" 
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right" 
                    Stroke="{DynamicResource TextBrush}" 
                    StrokeThickness="1" 
                    Stretch="None" 
                    Visibility="Collapsed"
                    Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WindowInactiveBorderBrush}" />
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Window}" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#F0F0F0"/>
                    <GradientStop Offset="1" Color="#EAEAEA"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#777"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Template" Value="{StaticResource Template.Window}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="1" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Controls.Extended:ColorDialog}" TargetType="{x:Type Controls.Extended:ColorDialog}" BasedOn="{StaticResource {x:Type Window}}"/>
    
    <Style x:Key="{x:Type Controls.Extended:GradientDialog}" TargetType="{x:Type Controls.Extended:GradientDialog}" BasedOn="{StaticResource {x:Type Window}}"/>
</ResourceDictionary>
