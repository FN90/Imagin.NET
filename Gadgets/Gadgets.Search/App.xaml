<Application 
    x:Class="Imagin.Search.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Gadgets.Search"
    StartupUri="SearchGadget.xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Controls.Common="clr-namespace:Imagin.Controls.Common;assembly=Imagin.Controls.Common"
    xmlns:Common.Data.Converters="clr-namespace:Imagin.Common.Data.Converters;assembly=Imagin.Common">
    <Application.Resources>
        <System:Double x:Key="DisabledOpacity">0.4</System:Double>
        
        <SolidColorBrush x:Key="ImageBrush" Color="#BBB"/>
        <SolidColorBrush x:Key="ImageHoverBrush" Color="#FF349ADE"/>
        <SolidColorBrush x:Key="ImagePressedBrush" Color="#FF70B6E4"/>

        <SolidColorBrush x:Key="TextBoxBackground" Color="Transparent"/>
        <SolidColorBrush x:Key="TextBoxBorder" Color="Transparent"/>
        <SolidColorBrush x:Key="TextBoxIsMouseOverBorderBrush" Color="#AAA"/>
        <SolidColorBrush x:Key="ReadOnlyTextBoxBackground" Color="Transparent"/>
        <SolidColorBrush x:Key="ReadOnlyTextBoxBorderBrush" Color="#DDD"/>
        <SolidColorBrush x:Key="ReadOnlyTextBoxForeground" Color="#AAA"/>

        <SolidColorBrush x:Key="TextBrush" Color="#666"/>

        <SolidColorBrush x:Key="ComboBoxBackground" Color="#DDD"/>
        <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="#BBB"/>
        <SolidColorBrush x:Key="ComboBoxForeground" Color="#777"/>
        <SolidColorBrush x:Key="ComboBoxCheckedBackground" Color="#007acc"/>
        <SolidColorBrush x:Key="ComboBoxCheckedBorderBrush" Color="#007acc"/>
        <SolidColorBrush x:Key="ComboBoxCheckedForeground" Color="#FFF"/>
        <SolidColorBrush x:Key="ComboBoxToggleButtonBackground" Color="#DDD"/>
        <SolidColorBrush x:Key="ComboBoxToggleButtonBorderBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBoxToggleButtonArrowFill" Color="#999"/>
        <SolidColorBrush x:Key="ComboBoxDropDownBackground" Color="#DDD"/>
        <SolidColorBrush x:Key="ComboBoxDropDownBorderBrush" Color="#BBB"/>
        <SolidColorBrush x:Key="ComboBoxItemIsHighlightedBackground" Color="#CCC"/>

        <SolidColorBrush x:Key="ToolTipBackground" Color="#fdf4bf"/>
        <SolidColorBrush x:Key="ToolTipBorderBrush" Color="#8b8040"/>
        <SolidColorBrush x:Key="ToolTipForeground" Color="#284d6f"/>
        
        <Common.Data.Converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
        <Common.Data.Converters:NullObjectToVisibilityConverter x:Key="NullObjectToVisibilityConverter"/>
        
        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
            <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" x:Name="border">
                <Grid Margin="5,0,0,0">
                    <TextBlock 
                        Foreground="{DynamicResource PlaceholderForeground}" 
                        FontSize="{TemplateBinding FontSize}"
                        FontFamily="{TemplateBinding FontFamily}"
                        Text="{TemplateBinding Tag}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Visibility="{TemplateBinding Text, Converter={StaticResource EmptyStringToVisibilityConverter}, ConverterParameter=Inverted}"/>
                    <ScrollViewer 
                        x:Name="PART_ContentHost" 
                        HorizontalAlignment="Stretch" 
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        MinHeight="{TemplateBinding MinHeight}" 
                        Height="{TemplateBinding Height}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ReadOnlyTextBoxBackground}" />
                    <Setter Property="Foreground" Value="{DynamicResource ReadOnlyTextBoxForeground}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource ReadOnlyTextBoxBorderBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Padding" Value="0,5" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter Margin="6,5" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxItemIsHighlightedBackground}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
            <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}"/>
            <Setter Property="IsEditable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ControlTemplate.Resources>
                            <ControlTemplate x:Key="ToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border 
                                        x:Name="Border" 
                                        Grid.ColumnSpan="2" 
                                        Background="Transparent" 
                                        BorderBrush="Transparent"
                                        BorderThickness="1"/>
                                    <Border 
                                        x:Name="PART_Two"
                                        Grid.Column="0" 
                                        CornerRadius="0" 
                                        Margin="1"/>
                                    <Path 
                                        x:Name="Arrow" 
                                        Grid.Column="1" 
                                        Fill="{DynamicResource ComboBoxForeground}" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxBackground}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
                                        <Setter TargetName="PART_Two" Property="Background" Value="{DynamicResource ComboBoxBackground}" />
                                        <Setter TargetName="PART_Two" Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
                                    </Trigger>
                                    <Trigger Property="ToggleButton.IsChecked" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxCheckedBackground}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxCheckedBorderBrush}" />
                                        <Setter TargetName="PART_Two" Property="Background" Value="{DynamicResource ComboBoxCheckedBackground}" />
                                        <Setter TargetName="PART_Two" Property="BorderBrush" Value="{DynamicResource ComboBoxCheckedBorderBrush}" />
                                        <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ComboBoxCheckedForeground}"/>
                                    </Trigger>
                                    <!--
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                        <Setter Property="Foreground" Value="#888888"/>
                                        <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                                    </Trigger>
                                    -->
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ControlTemplate.Resources>
                        <Grid>
                            <ToggleButton 
                                x:Name="ToggleButton" 
                                Template="{StaticResource ToggleButtonControlTemplate}" 
                                Grid.Column="2" 
                                Focusable="false" 
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter 
                                    Margin="8,0,21,0"  
                                    x:Name="ContentSite" 
                                    IsHitTestVisible="False" 
                                    Content="{TemplateBinding SelectionBoxItem}" 
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Left">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBoxDropDownBackground}" BorderThickness="1" BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" />
                                    <ScrollViewer Margin="1,2,1,1" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger SourceName="ToggleButton" Property="IsChecked" Value="true">
                                <Setter Property="Foreground" Value="{DynamicResource ComboBoxCheckedForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="{DynamicResource ToolTipBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderBrush}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Placement" Value="Bottom" />
            <Setter Property="Opacity" Value="0.95" />
            <Setter Property="Border.CornerRadius" Value="2" />
            <Setter Property="Padding" Value="15,7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border 
                            Panel.ZIndex="0"
                            Grid.Row="1"
                            CornerRadius="{TemplateBinding Border.CornerRadius}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            Margin="{TemplateBinding Margin}" 
                            Opacity="{TemplateBinding Opacity}">
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource DropShadowColor}" Opacity="0.25" BlurRadius="15" ShadowDepth="3"/>
                            </Border.Effect>
                            <TextBlock 
                                Foreground="{DynamicResource ToolTipForeground}"
                                Text="{TemplateBinding Content}" 
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
