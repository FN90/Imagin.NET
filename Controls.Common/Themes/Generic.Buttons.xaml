<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Imagin.Controls.Common"
    xmlns:Common.Data.Converters="clr-namespace:Imagin.Common.Data.Converters;assembly=Imagin.Common"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <Common.Data.Converters:NullObjectToVisibilityConverter x:Key="NullObjectToVisibilityConverter"/>
    <Common.Data.Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <System:Double x:Key="DisabledOpacity">0.4</System:Double>

    <Style x:Key="{x:Type local:ColorImage}" TargetType="{x:Type local:ColorImage}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorImage}">
                    <Rectangle 
                        Width="{TemplateBinding ImageWidth}" 
                        Height="{TemplateBinding ImageHeight}" 
                        Fill="{TemplateBinding ImageColor}" 
                        OpacityMask="{TemplateBinding ImageBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:ImageButton}" TargetType="{x:Type local:ImageButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}"  
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorImage
                                x:Name="PART_Rectangle" 
                                Source="{TemplateBinding Source}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ImageColor="{TemplateBinding ImageColor}"
                                Margin="0"
                                Padding="0"
                                Visibility="{TemplateBinding Source, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Content"
                                Content="{TemplateBinding Content}" 
                                Margin="{TemplateBinding ContentMargin}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding Content, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:ImageToggleButton}" TargetType="{x:Type local:ImageToggleButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageToggleButton}">
                    <Border 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorImage
                                x:Name="PART_Rectangle" 
                                Margin="0"
                                Padding="0"
                                Source="{TemplateBinding Source}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ImageColor="{TemplateBinding ImageColor}"
                                VerticalAlignment="Center"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Content"
                                Content="{TemplateBinding Content}" 
                                Margin="{TemplateBinding ContentMargin}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding Content, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
                <Setter Property="ToolTip" Value="{Binding CheckedToolTip, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
                <Setter Property="ToolTip" Value="{Binding UncheckedToolTip, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:ImageDropDownButton}" TargetType="{x:Type local:ImageDropDownButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageDropDownButton}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorImage
                                x:Name="PART_Rectangle" 
                                Source="{TemplateBinding Source}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ImageColor="{TemplateBinding ImageColor}"
                                VerticalAlignment="Center"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Content"
                                Content="{TemplateBinding Content}" 
                                Margin="{TemplateBinding ContentMargin}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding Content, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:AdvancedImageDropDownButton}" TargetType="{x:Type local:AdvancedImageDropDownButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AdvancedImageDropDownButton">
                    <Border 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}" 
                        Background="{TemplateBinding Background}"  
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ImageButton 
                                x:Name="PART_Icon" 
                                Source="{TemplateBinding Source}" 
                                Content="{TemplateBinding Content}" 
                                ContentMargin="{TemplateBinding ContentMargin}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ToolTip="{TemplateBinding ButtonToolTip}"
                                VerticalAlignment="Center"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Dropdown" 
                                Margin="5,0,0,0"
                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedImageDropDownButton}}}" 
                                ToolTip="{TemplateBinding DropDownToolTip}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding ShowDropDown, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                                    <Rectangle x:Name="PART_Rectangle" Width="12" Height="12" RenderTransformOrigin="0.5,0.5">
                                                        <Rectangle.OpacityMask>
                                                            <ImageBrush ImageSource="pack://application:,,,/Imagin.Controls.Common;component/Images/ArrowDown.png"/>
                                                        </Rectangle.OpacityMask>
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform Angle="-90"/>
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedImageDropDownButton}}}" Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation 
                                                                            Duration="0:0:0.25" 
                                                                            Storyboard.TargetName="PART_Rectangle" 
                                                                            Storyboard.TargetProperty="RenderTransform.Angle" 
                                                                            From="-90" 
                                                                            To="0"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation 
                                                                            Duration="0:0:0.25" 
                                                                            Storyboard.TargetName="PART_Rectangle" 
                                                                            Storyboard.TargetProperty="RenderTransform.Angle" 
                                                                            From="0" 
                                                                            To="-90"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource ImagePressedBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedImageDropDownButton}}}" Value="False">
                                                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource ImageBrush}"/>
                                                        </DataTrigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource ImageHoverBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>