<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Imagin.Controls.Common</name>
    </assembly>
    <members>
        <member name="T:Imagin.Controls.Common.LocalPathValidateHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LocalPathValidateHandler.FileExists(System.String)">
            <summary>
            
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LocalPathValidateHandler.FolderExists(System.String)">
            <summary>
            
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.PathValidateHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PathValidateHandler.FileOrFolderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PathValidateHandler.FileOrFolder">
            <summary>
            Gets or sets whether or not path represents a file or a folder.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.FileExists(System.String)">
            <summary>
            Gets whether or not the file at given path exists.
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.FolderExists(System.String)">
            <summary>
            Gets whether or not the folder at given path exists.
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.Validate(System.String)">
            <summary>
            Validates given path based on whether or not it is a file or a folder.
            </summary>
            <param name="Path"></param>
            <param name="FileOrFolder"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.Validate(System.Object[])">
            <summary>
            Validates path based on given arguments.
            </summary>
            <param name="Arguments"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DecimalRangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalRangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalRangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalRangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DoubleRangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleRangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleRangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleRangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Int16RangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16RangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16RangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int16RangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Int32RangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32RangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32RangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int32RangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Int64RangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64RangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64RangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int64RangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.NamedRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NamedRule.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.PathExistsRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PathExistsRule.Handler">
            <summary>
            A handler used to validate the path.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PathExistsRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.RangeRule`1">
            <summary>
            
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.Max">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.Min">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.ValidateMax">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.ValidateMin">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.RequiredRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RequiredRule.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RequiredRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.AbstractView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AbstractView.ItemContainerStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AbstractView.ItemContainerStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AbstractView.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AbstractView.ItemTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AbstractView.ItemWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AbstractView.ItemWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AbstractView.ItemHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AbstractView.ItemHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.AdvancedComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.AdvancedComboBox.Entered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AdvancedComboBox.CheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AdvancedComboBox.CheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AdvancedComboBox.PlaceholderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AdvancedComboBox.Placeholder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AdvancedComboBox.UncheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AdvancedComboBox.UncheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AdvancedComboBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AdvancedComboBox.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ButtonChrome">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.CornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.CornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.InnerCornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.InnerCornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderCheckedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderChecked">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderFocusedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderFocused">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderMouseOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderMouseOver">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderNormalProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderPressedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderPressed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ButtonChrome.OnCornerRadiusChanged(System.Windows.CornerRadius,System.Windows.CornerRadius)">
            <summary>
            
            </summary>
            <remarks>
            The <see cref="P:Imagin.Controls.Common.ButtonChrome.InnerCornerRadius"/> should be one less than the <see cref="P:Imagin.Controls.Common.ButtonChrome.CornerRadius"/>.
            </remarks>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ColumnResizeMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColumnResizeMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColumnResizeMode.Resize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColumnResizeMode.ResizeWithPreview">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DependencyProperty`2">
            <summary>
            
            </summary>
            <typeparam name="TProperty"></typeparam>
            <typeparam name="TOwner"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.DependencyProperty`2.#ctor(System.String,System.Windows.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="metadata"></param>
        </member>
        <member name="P:Imagin.Controls.Common.DependencyProperty`2.Property">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DependencyProperty`2.Get(`1)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DependencyProperty`2.Set(`1,`0)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.EnableCopyCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.SetEnableCopyCommand(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.GetEnableCopyCommand(System.Windows.Controls.Primitives.TextBoxBase)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.EnableCutCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.SetEnableCutCommand(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.GetEnableCutCommand(System.Windows.Controls.Primitives.TextBoxBase)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.EnablePasteCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.SetEnablePasteCommand(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.GetEnablePasteCommand(System.Windows.Controls.Primitives.TextBoxBase)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.ControlExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsPossibleDropTarget">
            <summary>
            Indicates whether or not the current item is a possible drop target
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.ContentProperty">
            <summary>
            Enables assigning any FrameworkElement a 'content' object.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetContent(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.SetContent(System.Windows.Controls.Control,System.Object)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsDraggingOverKey">
            <summary>
            Indicates whether or not the current item is a possible drop target
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsDraggingOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetIsDraggingOver(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsMouseDirectlyOverKey">
            <summary>
            Indicates whether or not the mouse is directly over an item.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsMouseDirectlyOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetIsMouseDirectlyOver(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsReadOnlyProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.SetIsReadOnly(System.Windows.Controls.Control,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetIsReadOnly(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.OnUpdateOverItem(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method is a listener for the UpdateOverItemEvent.  
            When it is received, it means that the sender is the 
            closest item to the mouse (closest logically, not visually).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Called when an item is dragged over the control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.OnDragLeave(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Called when the drag cursor leaves the control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.FlowDocumentExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FlowDocumentExtensions.Paragraphs(System.Windows.Documents.FlowDocument)">
            <summary>
            Gets all paragraphs for the given <see cref="T:System.Windows.Documents.FlowDocument"/>.
            </summary>
            <param name="Document"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.FrameworkElementExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions._ContextMenuProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.Get_ContextMenu(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.Set_ContextMenu(System.Windows.FrameworkElement,System.Windows.Controls.ContextMenu)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.BackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetBackground(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetBackground(System.Windows.FrameworkElement,System.Windows.Media.Brush)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.BorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetBorderBrush(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetBorderBrush(System.Windows.FrameworkElement,System.Windows.Media.Brush)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.BorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetBorderThickness(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetBorderThickness(System.Windows.FrameworkElement,System.Windows.Thickness)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.CornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetCornerRadius(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetCornerRadius(System.Windows.FrameworkElement,System.Windows.CornerRadius)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.EnableContextMenuProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetEnableContextMenu(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetEnableContextMenu(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.IsDragMoveEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetIsDragMoveEnabled(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetIsDragMoveEnabled(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.FindStyle``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="Element"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.TryFindStyle``1(``0,System.Windows.Style@)">
            <summary>
            
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="Element"></param>
            <param name="Style"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.DependencyObjectExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.IsVisibleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.SetIsVisible(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.GetIsVisible(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.Select(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Select the given element, if supported; element is valid if supports <see cref="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)"/> or is <see cref="T:System.Windows.Controls.TreeViewItem"/>.
            </summary>
            <param name="Value"></param>
            <param name="IsSelected"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.TrySelect(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Attempt to select the given element, if supported; element is valid if supports <see cref="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)"/> or is <see cref="T:System.Windows.Controls.TreeViewItem"/>.
            </summary>
            <param name="Object"></param>
            <param name="IsSelected"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.PanelExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.HorizontalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetHorizontalContentAlignment(System.Windows.Controls.Panel,System.Windows.HorizontalAlignment)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetHorizontalContentAlignment(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.SpacingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetSpacing(System.Windows.Controls.Panel,System.Windows.Thickness)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetSpacing(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.TrimFirstProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetTrimFirst(System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetTrimFirst(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.TrimLastProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetTrimLast(System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetTrimLast(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.VerticalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetVerticalContentAlignment(System.Windows.Controls.Panel,System.Windows.VerticalAlignment)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetVerticalContentAlignment(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.DataGridExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ExtendsDefaultBehaviorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetExtendsDefaultBehavior(System.Windows.Controls.DataGrid)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetExtendsDefaultBehavior(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.AddCommand">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.DisplayRowNumberProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetDisplayRowNumber(System.Windows.Controls.DataGrid)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetDisplayRowNumber(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.DisplayRowNumberOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetDisplayRowNumberOffset(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetDisplayRowNumberOffset(System.Windows.DependencyObject,System.Int32)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions._ScrollAddedIntoView">
            <summary>
            Stores reference to every <see cref="T:System.Windows.Controls.DataGrid"/> with <see cref="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty"/> enabled; the key is the hash code of the value's underlying collection.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty">
            <summary>
            Gets or sets whether or not to scroll newly added items into view; note, the underlying collection MUST implement <see cref="T:Imagin.Common.Collections.Generic.ITrackableCollection`1"/>.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetScrollAddedIntoView(System.Windows.Controls.DataGrid)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetScrollAddedIntoView(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when <see cref="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty"/> changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Windows.Controls.DataGrid,Imagin.Common.Collections.ITrackableCollection,System.Boolean)">
            <summary>
            Adds/removes and registers/unregisters events associated with <see cref="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty"/>, respectively.
            </summary>
            <param name="DataGrid"></param>
            <param name="Collection"></param>
            <param name="Register"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when <see cref="T:System.Windows.Controls.DataGrid"/> loads.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Object,Imagin.Common.Input.EventArgs{System.Object})">
            <summary>
            Occurs when an item is added to the <see cref="T:System.Windows.Controls.DataGrid"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.ItemsControlExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.AutoSizeColumnsProperty">
            <summary>
            Applies GridUnit.Star GridLength to all columns.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetAutoSizeColumns(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetAutoSizeColumns(System.Windows.Controls.ItemsControl,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.CanDragSelectProperty">
            <summary>
            Gets or sets value indicating whether ItemsControl should allow drag selecting items.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetCanDragSelect(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetCanDragSelect(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.IsColumnMenuEnabledProperty">
            <summary>
            Determines whether or not to add a ContextMenu to the column header for toggling column visibility.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetIsColumnMenuEnabled(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetIsColumnMenuEnabled(System.Windows.Controls.ItemsControl,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.DragScrollOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetDragScrollOffset(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetDragScrollOffset(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.DragScrollToleranceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetDragScrollTolerance(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetDragScrollTolerance(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SelectNoneOnEmptySpaceClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetSelectNoneOnEmptySpaceClick(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetSelectNoneOnEmptySpaceClick(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.CollapseSiblings(System.Windows.Controls.ItemsControl,System.Windows.Controls.TreeViewItem)">
            <summary>
            Collapse all items in ItemsControl (siblings of <param name="Source"/>).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.ClearSelection(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="ToEvaluate"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.Select(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            
            </summary>
            <param name="Control"></param>
            <param name="Item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.TryClearSelection(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="ToEvaluate"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ListBoxExtensions.IsDirectionalSelectionEnabledProperty">
            <summary>
            Determines whether or not directional keys can 
            be used to select items; intended for complex 
            views where items are organized in both rows 
            and columns.
            </summary>
            <pseudo>
            If up or left is clicked and nothing is selected, 
            select first. If bottom or right is clicked and 
            nothing is selected, select last. If first is 
            selected and clicking left or up, select last. 
            If last is selected and clicking right or down, 
            select first.
            </pseudo>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ListBoxExtensions.SelectionWrapProperty">
            <summary>
            Determines whether or not selections made with directional keys "wrap" ends.
            </summary>
            <remarks>
            IsDirectionalSelectionEnabled must be set to true.
            </remarks>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.MenuItemExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.MenuItemExtensions.elements">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.MenuItemExtensions.GroupNameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.SetGroupName(System.Windows.Controls.MenuItem,System.String)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.GetGroupName(System.Windows.Controls.MenuItem)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.MenuItemExtensions.SelectionModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.SetSelectionMode(System.Windows.Controls.MenuItem,Imagin.Controls.Common.MenuItemSelectionMode)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.GetSelectionMode(System.Windows.Controls.MenuItem)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.OnChecked(System.Object,System.Windows.RoutedEventArgs)">
            <remarks>
            Let's assume the MenuItem was generated from
            a collection of enum values. The data context 
            for the MenuItem would be = to a unique enum 
            value. The GroupSource should be bound to a 
            property somewhere that stores a reference to 
            the current enum value. When checking a MenuItem,
            it is necessary to update the GroupSource so the
            source reflects the checked value. The GroupSource
            should only update when an initial value has
            been set. 
            </remarks>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.TreeViewExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate(System.Windows.Controls.ItemsControl,System.Action{System.Object,System.Windows.Controls.ItemsControl})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child.
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate(System.Windows.Controls.ItemsControl,System.Func{System.Object,System.Windows.Controls.ItemsControl,System.Nullable{System.Boolean}})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child; return false to continue (skip children, continue with next), null to break (skip everything else), or true (proceed normally).
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate(System.Windows.Controls.ItemsControl,System.Action{System.Object,System.Windows.Controls.ItemsControl},System.Int32[])">
            <summary>
            Enumerate given indices of <see cref="T:System.Windows.Controls.ItemsControl"/> and perform given action for each child.
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
            <param name="Indices"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate``1(System.Windows.Controls.ItemsControl,System.Action{``0,System.Windows.Controls.ItemsControl})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child.
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate``1(System.Windows.Controls.ItemsControl,System.Func{``0,System.Windows.Controls.ItemsControl,System.Nullable{System.Boolean}})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child; return false to continue (skip children, continue with next), null to break (skip everything else), or true (proceed normally). 
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate``1(System.Windows.Controls.ItemsControl,System.Action{``0,System.Windows.Controls.ItemsControl},System.Int32[])">
            <summary>
            Enumerate given indices of <see cref="T:System.Windows.Controls.ItemsControl"/> and perform given action for each child. 
            <para>(recursive)</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Control"></param>
            <param name="Action"></param>
            <param name="Indices"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.GetAllItems(System.Windows.Controls.ItemsControl,System.Collections.Generic.ICollection{System.Windows.Controls.TreeViewItem})">
            <summary>
            
            </summary>
            <param name="Control"></param>
            <param name="AllItems"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItem(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="Item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItems(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="Item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItemsContinuously(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="TreeViewItem"></param>
            <param name="ShiftControl"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItemsRandomly(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="TreeViewItem"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectNone(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="Control"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.TreeViewItemExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.CollapseSiblings(System.Windows.Controls.TreeViewItem)">
            <summary>
            Collapses siblings of <param name="Item"/>.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.GetDepth(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get depth for given node.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.IconProperty">
            <summary>
            Gets or sets a value indicating whether window should implement default behavior; this is only applicable when window
            a) overrides default style,
            b) allows transparency, and
            c) style is set to 'None'.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.OverridesDefaultBehaviorProperty">
            <summary>
            Gets or sets a value indicating whether window should implement default behavior; this is only applicable when window
            a) overrides default style,
            b) allows transparency, and
            c) style is set to 'None'.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.POINT.x">
            <summary>
            x coordinate of point.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.POINT.y">
            <summary>
            y coordinate of point.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point of coordinates (x,y).
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.left">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.top">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.right">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.bottom">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Empty">
            <summary> Win32 </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Width">
            <summary> Win32 </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Height">
            <summary> Win32 </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Win32 </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.#ctor(Imagin.Controls.Common.Extensions.WindowExtensions.RECT)">
            <summary> Win32 </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.IsEmpty">
            <summary> Win32 </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.ToString">
            <summary> Return a user friendly representation of this struct </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.op_Equality(Imagin.Controls.Common.Extensions.WindowExtensions.RECT,Imagin.Controls.Common.Extensions.WindowExtensions.RECT)">
            <summary> Determine if 2 RECT are equal (deep compare)</summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.op_Inequality(Imagin.Controls.Common.Extensions.WindowExtensions.RECT,Imagin.Controls.Common.Extensions.WindowExtensions.RECT)">
            <summary> Determine if 2 RECT are different(deep compare)</summary>
        </member>
        <member name="T:Imagin.Controls.Common.FlagCheckView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.FlagsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.ItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.Items">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.ItemsPanelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.ItemsPanel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.ItemTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnFlagsChanged(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnItemAdded(System.Object,Imagin.Common.Input.EventArgs{Imagin.Common.CheckableObject{System.Object}})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnItemChecked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnItemUnchecked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Interactivity.AutoPositionPopupBehavior">
            <summary>
            Auto-positions popup when the parent element's position changes (TO-DO: support scrolling).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Interactivity.AutoPositionPopupBehavior.OnAttached">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Interactivity.AutoPositionPopupBehavior.Update">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MenuItemSelectionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MenuItemSelectionMode.Single">
            <summary>
            One item may be checked.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MenuItemSelectionMode.SingleOrNone">
            <summary>
            Either one or no items may be checked.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MenuItemSelectionMode.Multiple">
            <summary>
            Any number of items may be checked; equivalent to
            not specifying a group name.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.SelectionCanvas">
            <summary>
            SelectionCanvas
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectionCanvas.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.HexBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HexBox.regex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HexBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RegexBoxBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RegexBoxBase.regex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBoxBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBoxBase.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.RegexBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RegexBox.regex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RegexBox.PatternProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RegexBox.Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ITokenizer">
            <summary>
            Specifies an object capable of tokenizing a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ITokenizer.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer.ToString(System.Object)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ITokenizer`1">
            <summary>
            
            </summary>
            <typeparam name="TToken"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.ITokenizer`1.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer`1.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer`1.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.StringTokenizer">
            <summary>
            Tokenizes a <see cref="T:System.String"/> into multiple <see cref="T:System.String"/>s.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.ToString(System.String)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TokenButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenButton.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Tokenizer`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Tokenizer`1.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="Source"></param>
        </member>
        <member name="T:Imagin.Controls.Common.TokenMouseAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenMouseAction.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenMouseAction.Edit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenMouseAction.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TokenView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.CurrentText">
            <summary>
            Gets the current input text.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenDelimiterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenDelimiter">
            <summary>
            The <see cref="T:System.Char"/> used to delimit tokens.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenizerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.Tokenizer">
            <summary>
            The <see cref="T:Imagin.Controls.Common.ITokenizer"/> that handles tokenizing.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenTriggersProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenTriggers">
            <summary>
            Keys used to generate tokens when pressed.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenMouseDownActionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenMouseDownAction">
            <summary>
            Gets or sets the action to perform when the mouse is down on token.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokensProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.Tokens">
            <summary>
            Gets a collection of all instances of tokens.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokensSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokensSource">
            <summary>
            Gets or sets a tokenized string.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.Enumerate``1(System.Func{``0,System.Boolean})">
            <summary>
            For each token, perform action exposing corresponding <see cref="T:Imagin.Controls.Common.TokenButton"/>.
            </summary>
            <typeparam name="TButton"></typeparam>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.Enumerate``2(System.Func{``0,``1,System.Boolean})">
            <summary>
            For each token, perform action exposing corresponding <see cref="T:Imagin.Controls.Common.TokenButton"/> and <see cref="T:System.Windows.Documents.Inline"/>.
            </summary>
            <typeparam name="TInline"></typeparam>
            <typeparam name="TButton"></typeparam>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.Enumerate``3(System.Func{``0,``1,``2,System.Boolean})">
            <summary>
            For each token, perform action exposing corresponding <see cref="T:Imagin.Controls.Common.TokenButton"/>, <see cref="T:System.Windows.Documents.Inline"/>, and <see cref="T:System.Windows.Documents.Paragraph"/>.
            </summary>
            <typeparam name="TParagraph"></typeparam>
            <typeparam name="TInline"></typeparam>
            <typeparam name="TButton"></typeparam>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.GenerateInline(System.Object)">
            <summary>
            Generates an <see cref="T:System.Windows.Documents.Inline"/> element to host the given token.
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.GenerateRun(System.Object)">
            <summary>
            Generates a <see cref="T:System.Windows.Documents.Run"/> to host the <see cref="T:System.String"/> representation of the given token.
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.GetTokensSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.IntersectTokens">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.ReplaceWithToken(System.String,System.Object)">
            <summary>
            Replaces the given input text with the given token.
            </summary>
            <param name="Text"></param>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Occurs when the current text changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.EditToken(System.Object)">
            <summary>
            Converts the element that hosts the given token to a <see cref="T:System.Windows.Documents.Run"/>.
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.EditToken(Imagin.Controls.Common.TokenButton)">
            <summary>
            Converts the given token element to a <see cref="T:System.Windows.Documents.Run"/>.
            </summary>
            <param name="Button"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.RemoveToken(System.Object)">
            <summary>
            Removes the <see cref="T:System.Windows.Documents.Inline"/> that hosts the <see cref="T:Imagin.Controls.Common.TokenButton"/> corresponding to the given token.
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.RemoveToken(Imagin.Controls.Common.TokenButton)">
            <summary>
            Removes the <see cref="T:System.Windows.Documents.Inline"/> that hosts the given <see cref="T:Imagin.Controls.Common.TokenButton"/>.
            </summary>
            <param name="Button"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenDelimiterChanged(System.Char,System.Char)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.TokenView.TokenDelimiter"/> property changes.
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenLoaded(System.Object)">
            <summary>
            Occurs when a token has been loaded (or added both logically and visually).
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenUnloaded(System.Object)">
            <summary>
            Occurs when a token has been unloaded (or removed both logically and visually).
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokensSourceChanged(System.String)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.TokenView.TokensSource"/> property changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.TokenView.TokenStyle"/> property changes; if the style is null, the global style for <see cref="T:Imagin.Controls.Common.TokenButton"/> (if present) is used instead.
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenTriggered">
            <summary>
            Occurs when some event triggers the creation of a token.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TokenTriggerKey">
            <summary>
            Specifies a key that is capable of generating a token when pressed.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.Return">
            <summary>
            Corresponds to <see cref="F:System.Windows.Input.Key.Enter"/>.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.Tab">
            <summary>
            Corresponds to <see cref="F:System.Windows.Input.Key.Tab"/>.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.All">
            <summary>
            Corresponds to all enumerated keys.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewExt">
            <summary>
            An extended version of <see cref="T:System.Windows.Controls.TreeView"/>.
            </summary>
            <remarks>
            Multi-selection borrowed from https://github.com/cmyksvoll/MultiSelectTreeView.
            </remarks>
        </member>
        <member name="E:Imagin.Controls.Common.TreeViewExt.SelectedItemsChanged">
            <summary>
            Occurs when one or more items are selected or unselected.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.CanResizeColumnsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.CanResizeColumns">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderContextMenuProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderStyleSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderStyleSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderTemplateSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnHeaderVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.ColumnHeaderVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.ColumnsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.SelectedIndexProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.SelectedItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.SelectedItems">
            <summary>
            Get or set list of selected items.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.SelectedObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.SelectedObject">
            <summary>
            Get or set selected object.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewExt.SelectedVisualProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.SelectedVisual">
            <summary>
            Get or set visual associated with selected object.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.OnSelectedIndexChanged(System.Int32[])">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.OnSelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.OnSelectedItemsChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewExt.OnSelectedObjectChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewExt.CollapseAllCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewColumnCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewColumnCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewRowHeader">
            <summary>
            A container used to present a TreeViewItem's header.
            </summary>
            <remarks>
            This is only needed if item is hosted in TreeViewExt
            and, therefore, supports showing multiple columns. If 
            columns should be hidden or otherwise aren't present,
            the item's header is shown by default.
            </remarks>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewRowHeader.ColumnOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewRowHeader.ColumnOffset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetColumnContent(Imagin.Controls.Common.TreeViewColumn,System.Windows.Controls.TreeViewItem)">
            <summary>
            Get content for specified item based on specified column.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetDefaultHeader(System.Windows.Controls.TreeViewItem)">
            <summary>
            If not hosted in TreeViewExt or shouldn't show multiple columns, display default header.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetHeader(System.Windows.Controls.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets header for the specified item; columns are optional.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Hide the item while fetching the header; display item when finished. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Imagin.Controls.Common.AlignableWrapPanel" -->
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.ItemWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.ItemWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.ItemHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.ItemHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.OrientationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.HorizontalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.HorizontalContentAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.VerticalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.VerticalContentAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AlignableWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.AlignableWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.AlignableWrapPanel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DirectionPad">
            <summary>
            A rectangular control that enables specifying a 
            direction by clicking a directional arrow. Directional 
            arrows make all arrows shift in corresponding direction
             when clicked.
            </summary>
            <summary>
            DirectionPad
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DirectionPad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.EditableLabel">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.EditableLabel.Edited">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.ButtonHorizontalAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.ButtonHorizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.IsEditableProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.IsEditable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.MouseEventProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.MouseEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.ShowButtonProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.ShowButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.TextTrimmingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.TextTrimming">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnEntered(System.Windows.Input.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnEdited(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.FontSizeBox">
            <summary>
            A ComboBox containing traditional font sizes.
            </summary>
            <summary>
            FontSizeBox
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontSizeBox.WheelTick">
            <summary>
            Value to incremenet/decrement on mouse wheel; set 0 to stick to default values.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FontSizeBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Gadget">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Gadget.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RippleDecorator">
            <summary>
            A container that applies a ripple effect to content.
            </summary>
            <remarks>
            If (RippleMouseEvent = MouseEvent.Default) 
                RepeatBehavior = Forever
                Animation begins without input
            </remarks>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleDelay">
            <summary>
            Animation delay in seconds.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.AlphaNumericBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlphaNumericBox.regex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaNumericBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DragSelector">
            <summary>
            Provides logic for drag selecting over an ItemsControl.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.Grid">
            <summary>
            Element defined in template that wraps <see cref="T:System.Windows.Controls.ItemsPresenter"/>; used for mouse events.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.ScrollContentPresenter">
            <summary>
            <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> associated with <see cref="P:Imagin.Controls.Common.DragSelector.ScrollViewer"/>.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.ScrollViewer">
            <summary>
            Scrolling element defined in template.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DragSelector.Hash">
            <summary>
            Stores reference to ScrollViewer's style's hash code.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.IsDragging">
            <summary>
            Indicates if we're currently dragging.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.PreviousSelection">
            <summary>
            Stores reference to previously selected area.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.StartPoint">
            <summary>
            Point indicating where the drag started.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when mouse is down; begins drag.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Ocurrs whenever mouse moves; drag is evaluated.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when mouse is up; ends drag.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.FindPresenter">
            <summary>
            Find and store reference to <see cref="P:Imagin.Controls.Common.DragSelector.ScrollContentPresenter"/> by searching <see cref="P:Imagin.Controls.Common.DragSelector.ScrollViewer"/> template.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.Scroll(System.Windows.Point)">
            <summary>
            Scroll based on current position.
            </summary>
            <param name="Position"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.IntersectsWith(System.Windows.Rect,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Gets whether or not the given <see cref="T:System.Windows.Rect"/> intersects with either of the other two given <see cref="T:System.Windows.Rect"/>s: True if first, false if second, null if neither.
            </summary>
            <param name="Rect1"></param>
            <param name="Rect2"></param>
            <param name="Rect3"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.IntersectedWith(System.Windows.Rect)">
            <summary>
            Gets whether or not the given <see cref="T:System.Windows.Rect"/> intersects with any previous selection.
            </summary>
            <param name="Bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.Select(System.Windows.Controls.ItemsControl,System.Windows.Rect)">
            <summary>
            Select items in control based on given area.
            </summary>
            <param name="Control"></param>
            <param name="Area"></param>
        </member>
        <member name="T:Imagin.Controls.Common.FontFamilyBox">
            <summary>
            A ComboBox containing system font families.
            </summary>
            <summary>
            FontFamilyBox
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FontFamilyBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Link">
            <summary>
            Opens up a web link in default browser when clicked.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedDropDownButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedDropDownButton.DropDownProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedDropDownButton.DropDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedDropDownButton.DropDownDataContextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedDropDownButton.DropDownDataContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnDropDownChanged(System.Windows.Controls.ContextMenu)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnDropDownDataContextChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.ImageBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.ImageBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.ImageColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.ImageColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.ImageWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.ImageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.ImageHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.ImageHeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedImage.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedImage.OnSourceChanged(System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.ContentMarginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.ContentMargin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownDataContextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownDataContext">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownButtonToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownButtonToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownButtonVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownButtonVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.IsCheckedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.IsChecked">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.IsRippleEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.IsRippleEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.ImageBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.ImageBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.ImageColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.ImageColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.ImageWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.ImageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.ImageHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.ImageHeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnDropDownChanged(System.Windows.Controls.ContextMenu)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnDropDownDataContextChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnSourceChanged(System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedToggleButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.ImageBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.ImageBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.ImageColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.ImageColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.IsRippleEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.IsRippleEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.GroupNameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.GroupName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.CheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.CheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.UncheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.UncheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.ImageWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.ImageWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.ImageHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.ImageHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.ContentMarginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.ContentMargin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.OnGroupNameChanged(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.OnSourceChanged(System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.SetGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.FileBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.FileBox.FileBoxValidateHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.FileBoxValidateHandler.Validate(System.Object[])">
            <summary>
            
            </summary>
            <param name="Arguments"></param>
            <returns></returns>
        </member>
        <member name="E:Imagin.Controls.Common.FileBox.DialogOpened">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.BrowseModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseMode">
            <summary>
            Gets or sets the type of mode to browse in.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.BrowseTitleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseTitle">
            <summary>
            Gets or sets the title of the dialog used to select a path.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ButtonPositionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ButtonPosition">
            <summary>
            Gets or sets the position of the button used to show a dialog.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ButtonToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ButtonToolTip">
            <summary>
            Gets or sets the tool tip of the button used to show a dialog.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ButtonVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ButtonVisibility">
            <summary>
            Gets or sets the visibility of the button used to show a dialog.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.CanBrowseProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.CanBrowse">
            <summary>
            Gets or sets whether or not the button used to show a dialog is enabled.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.CanValidateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.CanValidate">
            <summary>
            Gets or sets whether or not the path should be validated.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.IsValidProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.IsValid">
            <summary>
            Gets whether or not the path is valid, if validation is enabled.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ValidateHandlerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ValidateHandler">
            <summary>
            Gets an object that implements <see cref="T:Imagin.Common.IValidate`1"/> and handles validation when enabled.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnBrowseModeChanged(Imagin.Common.DialogProviderMode)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnCanValidateChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnDialogOpened(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.Browse">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Line">
            <summary>
             A flexible separator.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.ContentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.Content">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.ContentStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.ContentStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.ContentTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.ContentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.OrientationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.StrokeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.StrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.StrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Line.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RadioGroup">
            <summary>
            A container for similar RadioButtons.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ItemContainerStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ItemContainerStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ItemTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ItemsSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ItemsSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.SetColumnWidth(System.Windows.DependencyObject,System.Windows.GridLength)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetColumnWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.MinColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.SetMinColumnWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetMinColumnWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.MaxColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.SetMaxColumnWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetMaxColumnWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ShowSplitterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ShowSplitter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.SplitterWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.SplitterWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetColumnDefinition(System.Windows.Controls.ContentPresenter,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnItemContainerStyleChanged(System.Windows.Style)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnItemsSourceChange(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnItemTemplateChanged(System.Windows.DataTemplate)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnSplitterWidthChanged(System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.PasswordBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.CanEnterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.CanEnter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.DotForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.DotForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.DotSizeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.DotSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.DotSpacingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.DotSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.HintProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.Hint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.ShowEnterButtonProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.ShowEnterButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PasswordBox.ShowPasswordProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PasswordBox.ShowPassword">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PasswordBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PasswordBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            When this.Text changes, set System.Windows.Controls.PasswordBox.Password.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PasswordBox.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PasswordBox.OnPreviewMouseLeftButtonDownHandled(System.Windows.Input.MouseButtonEventArgs,System.Type[])">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="HandledTypes"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DecimalUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.ToString(System.Decimal)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.IrrationalUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.IrrationalUpDown`1.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.IrrationalUpDown`1.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Imagin.Controls.Common.RationalUpDown`1.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RationalUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ByteUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.ToString(System.Byte)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.IUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.IUpDown`1.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.IUpDown`1.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.IUpDown`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.NumericUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.DefaultIncrement">
            <summary>
            The default value to increment by.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NumericUpDown`1.IncrementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NumericUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NumericUpDown`1.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.NumericUpDown`1.OnIncrementChanged(`0)">
            <summary>
            Occurs when the increment value changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.DateTimeUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.Increment">
            <summary>
            The value to increment by (e.g., if <see cref="P:Imagin.Controls.Common.DateTimeUpDown.SelectedPart" /> = <see cref="F:Imagin.Common.Primitives.DateTimePart.Month" /> and <see cref="P:Imagin.Controls.Common.DateTimeUpDown.Increment" /> = 3, increment by 3 months).
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.IsDropDownOpen">
            <summary>
            Gets or sets whether or not the drop down is open.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownAnimationProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownAnimation"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownAnimation">
            <summary>
            Gets or sets the drop down animation.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownPlacementProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownPlacement"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownPlacement">
            <summary>
            Gets or sets the drop down placement.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownStretchProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStretch"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStretch">
            <summary>
            Gets or sets the drop down stretch. If <see cref="F:System.Windows.Media.Stretch.None"/>, drop down width assumes width of it's content; if anything else, drop down width assumes width of parent, <see cref="T:Imagin.Controls.Common.DateTimeUpDown"/>.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownStyleProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStyle"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStyle">
            <summary>
            Gets or sets style of drop down; style must target <see cref="T:System.Windows.Controls.Border"/> control.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.SelectedPartProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.SelectedPart"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.SelectedPart">
            <summary>
            Gets or sets the selected <see cref="T:Imagin.Common.Primitives.DateTimePart"/> of the <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.StaysOpenProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpen"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpen">
            <summary>
            Gets or sets whether or not the drop down stays open when clicking neutral area outside of it.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.StaysOpenOnSelectionProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpenOnSelection"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpenOnSelection">
            <summary>
            Gets or sets whether or not the drop down stays open after making a selection.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.ToString(System.DateTime)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnPreviewMouseLeftButtonDownHandled(System.Windows.Input.MouseButtonEventArgs,System.Type[])">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="HandledTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnIsDropDownOpenChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnSelectedDatesChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.Change(System.Boolean)">
            <summary>
            
            </summary>
            <param name="IncreaseOrDecrease"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown.UpDownTimer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpDownTimer.Milliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpDownTimer.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.UpDownTimer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown.UpDownDirection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpDownDirection.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpDownDirection.Up">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpDownDirection.Down">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.PART_Down">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.PART_Up">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.Timer">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.UpDown.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.CanUpDownProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.CanUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.MajorChangeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.MajorChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.MajorChangeDelayProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.MajorChangeDelay">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.StringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.StringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.UpDown"/> class.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.CanDecrease">
            <summary>
            Gets whether or not decreasing is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.CanIncrease">
            <summary>
            Gets whether or not increasing is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.Decrease">
            <summary>
            Decreases value by some value.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.Increase">
            <summary>
            Increases value by some value.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.DownCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.Change(Imagin.Controls.Common.UpDown.UpDownDirection)">
            <summary>
            Increase or decrease based on given direction.
            </summary>
            <param name="Direction"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.ResetTimer">
            <summary>
            Reset the timer used for making major changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.SetText(System.String)">
            <summary>
            Set text; string format should be applied prior to calling.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnButtonMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the mouse presses the increase or decrease button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the mouse releases the increase or decrease button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnMajorChange(System.Object,System.EventArgs)">
            <summary>
            Occurs during a major change.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnMajorChangeChanged(System.Double)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.UpDown.MajorChange"/> changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnStringFormatChanged">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.UpDown.StringFormat"/> changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnPropertyChanged(System.String)">
            <summary>
            Occurs when a property changes.
            </summary>
            <param name="Name"></param>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.TreeViewComboBox.SelectedItemChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewComboBox.ContentTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewComboBox.ContentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewComboBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TextBoxExt">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TextBoxExt.OnPreviewMouseLeftButtonDownHandled(System.Windows.Input.MouseButtonEventArgs,System.Type[])">
            <remarks>
            Normally, focus is obtained when left mouse button is pressed.
            When clicking buttons that might be contained in the template,
            focus is obtained first, thus, requiring a second click in 
            order to actually click the button. To prevent this, we must
            detect whether or not the intention is to click a button or 
            focus. Therefore, if the element clicked IS a button, handle 
            the focus; otherwise, focus!
            </remarks>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.TextChangeHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.ValueChangeHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.AbsoluteMaximum">
            <summary>
            The absolute maximum value possible.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.AbsoluteMinimum">
            <summary>
            The absolute minimum value possible.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.DefaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown`1.MaximumProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown`1.MinimumProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown`1.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.UpDown"/> class.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnStringFormatChanged">
            <summary>
            Occurs when the string format changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Occurs when the text changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMaximumChanged(`0)">
            <summary>
            Occurs when the maximum value changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMinimumChanged(`0)">
            <summary>
            Occurs when the minimum value changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnValueChanged(`0)">
            <summary>
            Occurs when the value changes.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DoubleUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.ToString(System.Double)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.LongUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LongUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LongUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LongUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LongUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.ToString(System.Int64)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LongUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.BasicWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ButtonsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.Buttons">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ButtonsPanelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ButtonsPanel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ButtonStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ButtonStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentBorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentBorderBrush">
            <summary>
            Gets or sets the border brush of the content.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentBorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentBorderThickness">
            <summary>
            Gets or sets the border thickness of the content.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentMarginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentMargin">
            <summary>
            Gets or sets the outer margin of the content.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.FooterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.Footer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.IconTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.IconTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.OverlayProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.Overlay">
            <summary>
            Element to place on top of everything else; element covers entire window.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.OverlayVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.OverlayVisibility">
            <summary>
            The visibility of the overlay element.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ResizeGripTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ResizeGripTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.TitleTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.TitleTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.TypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BasicWindow.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BasicWindow.#ctor(System.Action)">
            <summary>
            
            </summary>
            <param name="OnClosed"></param>
        </member>
        <member name="T:Imagin.Controls.Common.WindowFooter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowFooter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.WindowBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowBase.Result">
            <summary>
            The result of the window subsequent to closing.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Closed">
            <summary>
            Occurs when the window is about to close.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Closing">
            <summary>
            Occurs directly after <see cref="M:System.Windows.Window.Close"/> is called, and can be handled to cancel window closure.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.FirstLoad">
            <summary>
            Occurs when the window is loaded for the first time.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Hidden">
            <summary>
            Occurs when the window is hidden.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Shown">
            <summary>
            Occurs when a window is shown.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowBase.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.WindowBase.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.CornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowBase.IsHiddenProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.WindowBase.IsHidden"/> dependency property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.IsHidden">
            <summary>
            Whether or not the window is currently hidden.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.Close(System.Boolean)">
            <summary>
            Manually closes a window.
            </summary>
            <param name="SupportsCancellation">Whether or not cancellation is supported.</param>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnBeginClosed(Imagin.Controls.Common.WindowResult)">
            <summary>
            Occurs when the window is about to close (async).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnBeginClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs directly after <see cref="M:System.Windows.Window.Close"/> is called, and can be handled to cancel window closure (async).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnClosed(Imagin.Controls.Common.WindowResult)">
            <summary>
            Occurs when the window is about to close.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs directly after <see cref="M:System.Windows.Window.Close"/> is called, and can be handled to cancel window closure.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
