<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework" 
    xmlns:local="clr-namespace:Imagin.Controls.Common"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Common.Data.Converters="clr-namespace:Imagin.Common.Data.Converters;assembly=Imagin.Common">
    <Common.Data.Converters:NullObjectToBooleanConverter x:Key="NullObjectToBooleanConverter"/>
    <Common.Data.Converters:NullObjectToVisibilityConverter x:Key="NullObjectToVisibilityConverter"/>
    <Common.Data.Converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
    <Common.Data.Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Common.Data.Converters:ObjectToTypeConverter x:Key="ObjectToTypeConverter"/>
    
    <System:Double x:Key="DisabledOpacity">0.4</System:Double>

    <Style TargetType="{x:Type local:Line}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Line}">
                    <Rectangle x:Name="PART_Rectangle" Fill="{TemplateBinding Color}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="PART_Rectangle" Property="Width" Value="Auto"/>
                            <Setter TargetName="PART_Rectangle" Property="Height" Value="{Binding Stroke, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_Rectangle" Property="Width" Value="{Binding Stroke, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Rectangle" Property="Height" Value="Auto"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Link}">
        <Setter Property="Foreground" Value="{DynamicResource LinkBrush}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Link">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}" 
                        VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <TextBlock 
                            TextDecorations="{TemplateBinding TextDecorations}"
                            Foreground="{TemplateBinding Foreground}" 
                            FontFamily="{TemplateBinding FontFamily}" 
                            FontSize="{TemplateBinding FontSize}" 
                            FontStretch="{TemplateBinding FontStretch}" 
                            FontStyle="{TemplateBinding FontStyle}" 
                            FontWeight="{TemplateBinding FontWeight}">
                            <Run Text="{TemplateBinding Content}"/>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="TextDecorations" Value="None" />
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:AdvancedTreeView}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AdvancedTreeView}">
                    <ScrollViewer 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        Focusable="False" 
                        CanContentScroll="True">
                        <ItemsPresenter HorizontalAlignment="Stretch"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border 
            Padding="{TemplateBinding Padding}"
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border 
                    Grid.Column="1" 
                    Background="{DynamicResource ComboBoxToggleButtonBackground}"/>
                <Path 
                    Grid.Column="1" 
                    Fill="{DynamicResource ComboBoxToggleButtonArrowFill}" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center" 
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
            </Grid>
        </Border>
    </ControlTemplate>
    
    <Style TargetType="local:TreeViewComboBox">
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeViewComboBox}">
                    <Grid
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">
                        <ToggleButton 
                            Grid.Column="2" 
                            x:Name="ToggleButton" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Focusable="false" 
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            ClickMode="Press"/>
                        <ContentControl 
                            Content="{TemplateBinding SelectedItem}"
                            Margin="8,0,21,0"
                            IsHitTestVisible="False" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left">
                            <ContentControl.Resources>
                                <DataTemplate x:Key="DefaultContentTemplate">
                                    <TextBlock Text="{Binding Header}"/>
                                </DataTemplate>
                            </ContentControl.Resources>
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ContentTemplate, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewComboBox}}, Converter={StaticResource NullObjectToBooleanConverter}}" Value="True">
                                            <Setter Property="ContentTemplate" Value="{Binding ContentTemplate, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewComboBox}}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ContentTemplate, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewComboBox}}, Converter={StaticResource NullObjectToBooleanConverter}}" Value="False">
                                            <Setter Property="ContentTemplate" Value="{StaticResource DefaultContentTemplate}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                        <Popup x:Name="PART_Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBoxDropDownBackground}" BorderThickness="1" BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}">
                                    <local:AdvancedTreeView 
                                        x:Name="PART_TreeView" 
                                        ItemBindingGroup="{TemplateBinding ItemBindingGroup}"
                                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                        ItemsSource="{TemplateBinding ItemsSource}"
                                        ItemStringFormat="{TemplateBinding ItemStringFormat}"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        ExpandOnClick="False"
                                        CollapseSiblings="False"
                                        BorderThickness="0" 
                                        Margin="10,5"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="50" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RadioGroup">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="FontSize" Value="13" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <BulletDecorator Background="Transparent" Cursor="Hand">
                                    <Border 
                                        Background="{TemplateBinding Background}" 
                                        Margin="0,0,-1,0" 
                                        BorderThickness="0,0,1,0"
                                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:RadioGroup}}}">
                                        <TextBlock 
                                            Margin="7,2" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            FontSize="12"><InlineUIContainer><ContentPresenter /></InlineUIContainer></TextBlock>
                                    </Border>
                                </BulletDecorator>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#11000000" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:RadioGroup}}}" />
                                        <Setter Property="Foreground" Value="#FFF" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:RadioGroup}}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RadioGroup}">
                    <Grid>
                        <Border 
                            CornerRadius="4" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" 
                            Margin="{TemplateBinding Margin}">
                            <StackPanel 
                                IsItemsHost="True" 
                                Orientation="Horizontal" 
                                ClipToBounds="True"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:ColorImage}" TargetType="{x:Type local:ColorImage}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorImage}">
                    <Rectangle 
                        Width="{TemplateBinding ImageWidth}" 
                        Height="{TemplateBinding ImageHeight}" 
                        Fill="{TemplateBinding ImageColor}" 
                        OpacityMask="{TemplateBinding ImageBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:ImageButton}" TargetType="{x:Type local:ImageButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}"  
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorImage
                                x:Name="PART_Rectangle" 
                                Source="{TemplateBinding Source}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ImageColor="{TemplateBinding ImageColor}"
                                Margin="0"
                                Padding="0"
                                Visibility="{TemplateBinding Source, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Content"
                                Content="{TemplateBinding Content}" 
                                Margin="{TemplateBinding ContentMargin}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding Content, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:ImageToggleButton}" TargetType="{x:Type local:ImageToggleButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageToggleButton}">
                    <Border Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorImage
                                x:Name="PART_Rectangle" 
                                Margin="0"
                                Padding="0"
                                Source="{TemplateBinding Source}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ImageColor="{TemplateBinding ImageColor}"
                                VerticalAlignment="Center"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Content"
                                Content="{TemplateBinding Content}" 
                                Margin="{TemplateBinding ContentMargin}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding Content, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
                <Setter Property="ToolTip" Value="{Binding CheckedToolTip, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
                <Setter Property="ToolTip" Value="{Binding UncheckedToolTip, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:ImageDropDownButton}" TargetType="{x:Type local:ImageDropDownButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageDropDownButton}">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorImage
                                x:Name="PART_Rectangle" 
                                Source="{TemplateBinding Source}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ImageColor="{TemplateBinding ImageColor}"
                                VerticalAlignment="Center"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Content"
                                Content="{TemplateBinding Content}" 
                                Margin="{TemplateBinding ContentMargin}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding Content, Converter={StaticResource NullObjectToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="1"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="PART_Rectangle" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Content" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Rectangle" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:AdvancedImageDropDownButton}" TargetType="{x:Type local:AdvancedImageDropDownButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AdvancedImageDropDownButton">
                    <Border 
                        Margin="{TemplateBinding Margin}" 
                        Padding="{TemplateBinding Padding}" 
                        Background="{TemplateBinding Background}"  
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:ImageButton 
                                x:Name="PART_Icon" 
                                Source="{TemplateBinding Source}" 
                                Content="{TemplateBinding Content}" 
                                ContentMargin="{TemplateBinding ContentMargin}"
                                ImageWidth="{TemplateBinding ImageWidth}" 
                                ImageHeight="{TemplateBinding ImageHeight}"
                                ToolTip="{TemplateBinding ButtonToolTip}"
                                VerticalAlignment="Center"/>
                            <ContentControl 
                                Grid.Column="1" 
                                x:Name="PART_Dropdown" 
                                Margin="5,0,0,0"
                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedImageDropDownButton}}}" 
                                ToolTip="{TemplateBinding DropDownToolTip}" 
                                VerticalAlignment="Center"
                                Visibility="{TemplateBinding ShowDropDown, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                                    <Rectangle x:Name="PART_Rectangle" Width="12" Height="12" RenderTransformOrigin="0.5,0.5">
                                                        <Rectangle.OpacityMask>
                                                            <ImageBrush ImageSource="pack://application:,,,/Imagin.Controls.Common;component/Images/ArrowDown.png"/>
                                                        </Rectangle.OpacityMask>
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform Angle="-90"/>
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedImageDropDownButton}}}" Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation 
                                                                            Duration="0:0:0.25" 
                                                                            Storyboard.TargetName="PART_Rectangle" 
                                                                            Storyboard.TargetProperty="RenderTransform.Angle" 
                                                                            From="-90" 
                                                                            To="0"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation 
                                                                            Duration="0:0:0.25" 
                                                                            Storyboard.TargetName="PART_Rectangle" 
                                                                            Storyboard.TargetProperty="RenderTransform.Angle" 
                                                                            From="0" 
                                                                            To="-90"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource ImagePressedBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedImageDropDownButton}}}" Value="False">
                                                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource ImageBrush}"/>
                                                        </DataTrigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="{DynamicResource ImageHoverBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--///////////////////////////////////////////////////////////////////////////////////////////////////-->

    <Style x:Key="{x:Type local:UpDown}" TargetType="{x:Type local:UpDown}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UpDown}">
                    <Border 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        Width="{TemplateBinding Width}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border 
                                Grid.RowSpan="2" 
                                x:Name="border"
                                MinHeight="{TemplateBinding MinHeight}" 
                                Height="{TemplateBinding Height}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid>
                                    <TextBlock 
                                        Foreground="{DynamicResource PlaceholderForeground}" 
                                        FontSize="{TemplateBinding FontSize}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        Text="{TemplateBinding Placeholder}" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Visibility="{TemplateBinding Text, Converter={StaticResource EmptyStringToVisibilityConverter}, ConverterParameter=Inverted}"/>
                                    <ScrollViewer 
                                        x:Name="PART_ContentHost" 
                                        HorizontalAlignment="Stretch" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                        MinHeight="{TemplateBinding MinHeight}" 
                                        Height="{TemplateBinding Height}"/>
                                </Grid>
                            </Border>
                            <Grid Grid.Column="1" Margin="0,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <local:ImageButton 
                                    x:Name="PART_Up"
                                    ImageWidth="10" 
                                    ImageHeight="10" 
                                    Margin="5,0,0,0"
                                    Command="{x:Static local:UpDown.Up}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"
                                    Source="pack://application:,,,/Imagin.Controls.Common;component/Images/ArrowUp.png"/>
                                <local:ImageButton 
                                    Grid.Row="1" 
                                    x:Name="PART_Down"
                                    ImageWidth="10" 
                                    ImageHeight="10" 
                                    Margin="5,0,0,0"
                                    Command="{x:Static local:UpDown.Down}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:UpDown}}}"
                                    Source="pack://application:,,,/Imagin.Controls.Common;component/Images/ArrowDown.png"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--///////////////////////////////////////////////////////////////////////////////////////////////////-->
    
    <Style x:Key="{x:Type local:DragSelection}" TargetType="{x:Type local:DragSelection}">
        <Setter Property="Background" Value="#349ADE"/>
        <Setter Property="BorderBrush" Value="#FF2B97E0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DragSelection}">
                    <Canvas x:Name="PART_Canvas">
                        <Border 
                            x:Name="PART_Rectangle" 
                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="1" 
                            Opacity="0.5" 
                            Width="{Binding Selection.Width}" 
                            Height="{Binding Selection.Height}">
                            <Border.RenderTransform>
                                <TranslateTransform 
                                    X="{Binding Selection.X}" 
                                    Y="{Binding Selection.Y}"/>
                            </Border.RenderTransform>
                        </Border>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:AdvancedDataGrid}" TargetType="{x:Type local:AdvancedDataGrid}">
        <Setter Property="Background" Value="{DynamicResource DataGridBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridBorderBrush}" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AdvancedDataGrid}">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ScrollViewer" Panel.ZIndex="1" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="{Binding ElementName=PART_VerticalScrollBar, Path=ActualWidth, Mode=OneWay}"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="{Binding ElementName=PART_HorizontalScrollBar, Path=ActualHeight, Mode=OneWay}"/>
                                        </Grid.RowDefinitions>
                                        <Button 
                                            Command="{x:Static DataGrid.SelectAllCommand}" 
                                            Focusable="False" 
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <DataGridColumnHeadersPresenter 
                                            Panel.ZIndex="0" Grid.ColumnSpan="3" x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter 
                                            Grid.Row="1"
                                            Grid.ColumnSpan="3" 
                                            Grid.RowSpan="2" 
                                            x:Name="PART_ScrollContentPresenter" 
                                            CanContentScroll="{TemplateBinding CanContentScroll}"/>
                                        <ScrollBar 
                                            Grid.Row="1" 
                                            Grid.Column="2" 
                                            Grid.RowSpan="1" 
                                            x:Name="PART_VerticalScrollBar" 
                                            Maximum="{TemplateBinding ScrollableHeight}" 
                                            HorizontalAlignment="Right" 
                                            Margin="0,0,-5,0"
                                            Orientation="Vertical" 
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <ScrollBar 
                                            Grid.Row="2"
                                            Grid.ColumnSpan="2" 
                                            x:Name="PART_HorizontalScrollBar" 
                                            VerticalAlignment="Bottom" 
                                            Margin="0,0,0,-5"
                                            Maximum="{TemplateBinding ScrollableWidth}" 
                                            Orientation="Horizontal" 
                                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <Grid x:Name="PART_Grid" Background="Transparent" ClipToBounds="True" Margin="{TemplateBinding Padding}">
                                <ItemsPresenter x:Name="PART_Items" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <local:DragSelection x:Name="PART_DragSelection" Selection="{TemplateBinding Selection}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragSelectionEnabled" Value="True">
                            <Setter TargetName="PART_Items" Property="Margin" Value="10,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:AdvancedListView}" TargetType="{x:Type local:AdvancedListView}">
        <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AdvancedListView}">
                    <ControlTemplate.Resources>
                        <Style x:Key="GridViewStyle" TargetType="{x:Type ScrollViewer}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <Border Padding="{TemplateBinding Padding}">
                                            <Grid Background="{TemplateBinding Background}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.ColumnSpan="2" Background="#11000000">
                                                    <GridViewHeaderRowPresenter 
                                                        HorizontalAlignment="Stretch"
                                                        Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                        AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                                <ScrollContentPresenter 
                                                    Grid.Row="1" 
                                                    Grid.ColumnSpan="2" 
                                                    Name="PART_ScrollContentPresenter" 
                                                    KeyboardNavigation.DirectionalNavigation="Local"/>
                                                <ScrollBar 
                                                    Name="PART_HorizontalScrollBar"
                                                    Orientation="Horizontal"
                                                    Grid.Row="2"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Value="{TemplateBinding HorizontalOffset}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                <ScrollBar 
                                                    Name="PART_VerticalScrollBar"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Maximum="{TemplateBinding ScrollableHeight}"
                                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                                    Value="{TemplateBinding VerticalOffset}"
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <ScrollViewer x:Name="PART_ScrollViewer" Margin="{TemplateBinding Margin}">
                        <Grid x:Name="PART_Grid" Background="Transparent" ClipToBounds="True" Margin="{TemplateBinding Padding}">
                            <ItemsPresenter/>
                            <local:DragSelection x:Name="PART_DragSelection" Selection="{TemplateBinding Selection}"/>
                        </Grid>
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding View, Converter={StaticResource ObjectToTypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:AdvancedListView}}}" Value="{x:Type GridView}">
                            <Setter TargetName="PART_ScrollViewer" Property="Style" Value="{StaticResource GridViewStyle}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
</ResourceDictionary>