<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Imagin.Controls.Common.Wpf</name>
    </assembly>
    <members>
        <member name="T:Imagin.Controls.Common.Chip`1">
            <summary>
            A chip for displaying and selecting a brush.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.Chip`1.ValueChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Chip`1.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Chip`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Chip`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Chip`1.OnValueChanged(`0)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ChipBase">
            <summary>
            A chip for displaying and selecting a brush.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ChipBase.DialogEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ChipBase.IsSynchronizedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ChipBase.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ChipBase.TitleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ChipBase.Title">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ChipBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ChipBase.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ChipBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ChipBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ChipBase.OnIsSynchronizedChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ChipBase.ShowDialog">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ColorChip">
            <summary>
            A chip for displaying and selecting a SolidColorBrush.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ColorChip.ColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorChip.ColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorChip.Color">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorChip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorChip.OnColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorChip.OnValueChanged(System.Windows.Media.SolidColorBrush)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorChip.ShowDialog">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DualColorChip">
            <summary>
            
            </summary>
            <summary>
            DualColorChip
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.DualColorChip.ForegroundColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.DualColorChip.BackgroundColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.BackgroundColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.BackgroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.BackgroundToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.BackgroundToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.DefaultBackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.DefaultBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.DefaultForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.DefaultForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.ForegroundColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.ForegroundColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.ForegroundToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.ForegroundToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.ResetToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.ResetToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DualColorChip.SwitchToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DualColorChip.SwitchToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DualColorChip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DualColorChip.OnBackgroundColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DualColorChip.OnForegroundColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DualColorChip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.GradientChip">
            <summary>
            A chip for displaying and selecting a LinearGradientBrush.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.GradientChip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.GradientChip.ShowDialog">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyView">
            <summary>
            
            </summary>
            <summary>
            PropertyView
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyView.PropertyProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyView.Property">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.BrushDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialog.#ctor(System.String,System.Windows.Media.Brush,Imagin.Controls.Common.Chip{System.Windows.Media.Brush})">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="initialValue"></param>
            <param name="chip"></param>
        </member>
        <member name="T:Imagin.Controls.Common.BrushDialogBase`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Imagin.Controls.Common.BrushDialogBase`1.IsCancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BrushDialogBase`1.IsSave">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BrushDialogBase`1.FooterStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BrushDialogBase`1.FooterStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BrushDialogBase`1.DefaultTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BrushDialogBase`1.Chip">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BrushDialogBase`1.InitialValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BrushDialogBase`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialogBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialogBase`1.#ctor(System.String,`0,Imagin.Controls.Common.Chip{`0})">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="initialValue"></param>
            <param name="chip"></param>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialogBase`1.OnRevert(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialogBase`1.OnCancel(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.BrushDialogBase`1.OnSave(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ColorDialog">
            <summary>
            
            </summary>
            <summary>
            ColorDialog
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorDialog.DefaultTitle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorDialog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorDialog.#ctor(System.String,System.Windows.Media.SolidColorBrush,Imagin.Controls.Common.Chip{System.Windows.Media.SolidColorBrush})">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="initialValue"></param>
            <param name="chip"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorDialog.OnRevert(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorDialog.OnSelectedColorChanged(System.Object,Imagin.Common.Input.EventArgs{System.Windows.Media.Color})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.GradientDialog">
            <summary>
            
            </summary>
            <summary>
            GradientDialog
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientDialog.DefaultTitle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.GradientDialog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.GradientDialog.#ctor(System.String,System.Windows.Media.Brush,Imagin.Controls.Common.Chip{System.Windows.Media.Brush})">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="initialValue"></param>
            <param name="chip"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientDialog.OnRevert(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientDialog.OnGradientChanged(System.Object,Imagin.Common.Input.EventArgs{System.Windows.Media.Brush})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.SolidColorBrushDialog">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SolidColorBrushDialog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SolidColorBrushDialog.#ctor(System.String,System.Windows.Media.SolidColorBrush,Imagin.Controls.Common.Chip{System.Windows.Media.SolidColorBrush})">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="initialValue"></param>
            <param name="chip"></param>
        </member>
        <member name="T:Imagin.Controls.Common.IPropertyGrid`1">
            <summary>
            
            </summary>
            <typeparam name="TSource"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.IPropertyGrid`1.GetPropertiesAsync(`0)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyGrid">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourceLocked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourceUnlocked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourceDeleted(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.FollowSource(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.IgnoreSource(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.GetSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.Nest(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.RewindNest">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourceLocked">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourceUnlocked">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourcePropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.OnSourceDeleted(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGrid.GetPropertiesAsync(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyGridBase`1">
            <summary>
            
            </summary>
            <typeparam name="TSource"></typeparam>
        </member>
        <member name="E:Imagin.Controls.Common.PropertyGridBase`1.SourceChanged">
            <summary>
            Occurs when the selected object changes.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase`1.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase`1.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase`1.DisconnectSourceCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase`1.OnUnloaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase`1.FollowSource(`0)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase`1.GetPropertiesAsync(`0)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase`1.IgnoreSource(`0)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase`1.OnSourceChanged(`0,`0)">
            <summary>
            
            </summary>
            <param name="oldSource"></param>
            <param name="newSource"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ExtendedScrollViewer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ExtendedScrollViewer.PaddingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ExtendedScrollViewer.Padding">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ExtendedScrollViewer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ThicknessBox">
            <summary>
            
            </summary>
            <summary>
            ThicknessBox
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ThicknessBox.FieldSpacingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ThicknessBox.FieldSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ThicknessBox.MaximumProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ThicknessBox.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ThicknessBox.MinimumProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ThicknessBox.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ThicknessBox.ThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ThicknessBox.Thickness">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ThicknessBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ThicknessBox.OnThicknessPartChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ThicknessBox.OnThicknessChanged(System.Windows.Thickness)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ThicknessBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MultiUpDown`2">
            <summary>
            An <see cref="T:Imagin.Controls.Common.UpDown"/> with multiple parts.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TPart"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.MultiUpDown`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.SignedRationalUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.SignedRationalUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SignedRationalUpDown`1.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.UnsignedRationalUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.UnsignedRationalUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UnsignedRationalUpDown`1.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LocalPathValidateHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LocalPathValidateHandler.FileExists(System.String)">
            <summary>
            
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LocalPathValidateHandler.FolderExists(System.String)">
            <summary>
            
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.PathValidateHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PathValidateHandler.FileOrFolderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PathValidateHandler.FileOrFolder">
            <summary>
            Gets or sets whether or not path represents a file or a folder.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.FileExists(System.String)">
            <summary>
            Gets whether or not the file at given path exists.
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.FolderExists(System.String)">
            <summary>
            Gets whether or not the folder at given path exists.
            </summary>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.Validate(System.String)">
            <summary>
            Validates given path based on whether or not it is a file or a folder.
            </summary>
            <param name="Path"></param>
            <param name="FileOrFolder"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PathValidateHandler.Validate(System.Object[])">
            <summary>
            Validates path based on given arguments.
            </summary>
            <param name="Arguments"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DecimalRangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalRangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalRangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalRangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DoubleRangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleRangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleRangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleRangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Int16RangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16RangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16RangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int16RangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Int32RangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32RangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32RangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int32RangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Int64RangeRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64RangeRule.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64RangeRule.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int64RangeRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.NamedRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NamedRule.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.PathExistsRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PathExistsRule.Handler">
            <summary>
            A handler used to validate the path.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PathExistsRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.RangeRule`1">
            <summary>
            
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.DefaultMax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.DefaultMin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.Max">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RangeRule`1.Min">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.ValidateMax">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.ValidateMin">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RangeRule`1.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.RequiredRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RequiredRule.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RequiredRule.Validate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ItemView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ItemView.ItemContainerStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ItemView.ItemContainerStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ItemView.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ItemView.ItemTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ItemView.ItemWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ItemView.ItemWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ItemView.ItemHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ItemView.ItemHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.AlphaSlider">
            <summary>
            
            </summary>
            <summary>
            AlphaSlider
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.AlphaSlider.AlphaChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlphaSlider.ColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlphaSlider.Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlphaSlider.AlphaProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlphaSlider.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaSlider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaSlider.OnAlphaChanged(System.Byte)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaSlider.OnColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaSlider.OnSliderChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaSlider.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.AnglePicker">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.AngleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.Angle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.OriginFillProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.OriginFill">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.OriginStrokeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.OriginStroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.OriginStrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.OriginStrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.OriginVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.OriginVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.NeedleStrokeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.NeedleStroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.NeedleStrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.NeedleStrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AnglePicker.RadiansProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AnglePicker.Radians">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AnglePicker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AnglePicker.OnAngleChanged(System.Double)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.AnglePicker.OnRadiansChanged(System.Double)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.AnglePicker.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ColorComb">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ColorComb.SelectedColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorComb.ItemStrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorComb.ItemStrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorComb.MaxGenerationsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorComb.MaxGenerations">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorComb.SelectedColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorComb.SelectedColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorComb.TotalChildrenProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorComb.TotalChildren">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorComb.UsesGradientsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorComb.UsesGradients">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.Cascade">
            <summary>
            Cascade all cells with color.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.Cascade(Imagin.Controls.Common.HexagonButton)">
            <summary>
            Cascade child cells with color; this method is recursive.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.InitializeCells">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.InitializeCells(Imagin.Controls.Common.HexagonButton,System.Int32)">
            <summary>
            Initialize surrounding cells; this method is recursive.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.OnCellClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.OnSelectedColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorComb.OnMaxGenerationsChanged(System.Int32)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.CmykModel">
            <remarks>
            When a component gets value, 
            casting the result to int throws
            exception for a small, but weird 
            range of colors (black is one of them). 
            Exceptions must be caught until 
            a solution is found.
            
            This issue only occurs for this model.
            </remarks>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.CmykModel.CmykComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CmykModel.CmykComponent.CanSelect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.CmykComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.CmykComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.CmykModel.CmykComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.CmykComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.CmykModel.CComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CmykModel.CComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.CComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.CComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.CmykModel.MComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CmykModel.MComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.MComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.MComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.CmykModel.YComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CmykModel.YComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.YComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.YComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.CmykModel.KComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CmykModel.KComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.KComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.CmykModel.KComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ColorSpaceModel">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ColorSpaceModel.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceModel.Components">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceModel.Illuminant">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceModel.Observer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceModel.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel.GetColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel.OnComponentAdded(System.Object,Imagin.Common.Input.EventArgs{Imagin.Controls.Common.ComponentModel})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel.OnSelected(System.Object,Imagin.Common.Input.SelectedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ColorSpaceModel`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel`1.GetColor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel`1.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel`1.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceModel`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ComponentModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentModel.ColorChangedHandled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentModel.TextChangedHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.ColorSpace">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.Illuminant">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.Observer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.Maximum">
            <summary>
            The largest possible value for a component (value when slider at top)
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.Minimum">
            <summary>
            The smallest possible value for a component (value when slider at bottom)
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.CanSelect">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentModel.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.GetValue(System.Windows.Media.Color)">
            <summary>
            The value of the component for a given color
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.BeginSet(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.Set(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentModel.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.HsbModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.HsbModel.HComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.HComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.HComponent.IsUniform">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.HComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.HComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.HsbModel.SComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.SComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.SComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.SComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.HsbModel.BComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.BComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.HsbModel.BComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HsbModel.BComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.HslModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.HslModel.HComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.HComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.HComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.HComponent.IsUniform">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.HComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.HslModel.SComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.SComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.SComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.SComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.HslModel.LComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.LComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.HslModel.LComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HslModel.LComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LabModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.LabModel.LComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LabModel.LComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LabModel.LComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.LComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LabModel.AComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LabModel.AComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.AComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LabModel.BComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LabModel.BComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LabModel.BComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LchModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.LchModel.LComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.LComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.LComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.LComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LchModel.CComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.CComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.CComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.CComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LchModel.HComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.HComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.HComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LchModel.HComponent.IsUniform">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LchModel.HComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LuvModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.LuvModel.LComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LuvModel.LComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LuvModel.LComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.LComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LuvModel.UComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LuvModel.UComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.UComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.LuvModel.VComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.LuvModel.VComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LuvModel.VComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.SelectableComponentModel">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.SelectableComponentModel.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.SelectableComponentModel.IsSelected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.SelectableComponentModel.IsUniform">
            <summary>
            Gets whether or not the component is uniform.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.OnSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.PointFromColor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            Gets the color corresponding to a selected point (with 255 alpha)
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.PointFromColor(System.Windows.Media.Color)">
            <summary>
            Gets the point on the color plane that corresponds to the color (alpha ignored)
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            Updates the plane bitmap.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectableComponentModel.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            Updates the slider bitmap.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RgbaModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RgbaModel.RgbComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RgbComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RgbComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.RgbaModel.RgbComponent.UnitLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RgbComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.RgbaModel.RComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RgbaModel.RComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.RComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.RgbaModel.GComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RgbaModel.GComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.GComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.RgbaModel.BComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RgbaModel.BComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.BComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.BComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.BComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.BComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.BComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RgbaModel.BComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.XyzModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.GetValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.XyzModel.XComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.XyzModel.XComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.XComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.XyzModel.YComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.XyzModel.YComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.YComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.XyzModel.ZComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.GetMaximum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.GetMinimum">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Imagin.Controls.Common.XyzModel.ZComponent.ComponentLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.ColorAtPoint(System.Windows.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="SelectionPoint"></param>
            <param name="ComponentValue"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.GetValue(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.PointFromColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.UpdatePlane(System.Windows.Media.Imaging.WriteableBitmap,System.Int32,System.Func{Imagin.Common.RowColumn,System.Int32,Imagin.Common.Drawing.Rgba},System.Nullable{Imagin.Common.RowColumn})">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="ComponentValue"></param>
            <param name="Action"></param>
            <param name="Unit"></param>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.UpdateSlider(System.Windows.Media.Imaging.WriteableBitmap,System.Windows.Media.Color,System.Func{System.Windows.Media.Color,System.Double,Imagin.Common.Drawing.Rgba},System.Boolean)">
            <summary>
            
            </summary>
            <param name="Bitmap"></param>
            <param name="Color"></param>
            <param name="Action"></param>
            <param name="Reverse"></param>
        </member>
        <member name="M:Imagin.Controls.Common.XyzModel.ZComponent.#ctor(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="ColorSpace"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ColorSpaceView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSpaceView.ColorSpaceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceView.ColorSpace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSpaceView.IlluminantProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceView.Illuminant">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSpaceView.ObserverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSpaceView.Observer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceView.OnColorSpaceChanged(Imagin.Controls.Common.ColorSpaceModel)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceView.OnIlluminantChanged(Imagin.Common.Drawing.Illuminant)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSpaceView.OnObserverChanged(Imagin.Common.Drawing.ObserverAngle)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ComponentView">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ComponentView.ColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentView.ColorChangedHandled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentView.ValueChangedHandled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentView.ColorSpaceModelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentView.ColorSpaceModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentView.ComponentModelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentView.ComponentModel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentView.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentView.Value">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComponentView.ColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentView.Color">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentView.OnColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentView.OnValueChanged(System.Double)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ColorPicker">
            <summary>
            A color picker inspired by http://www.codeproject.com/Articles/131708/WPF-Color-Picker-Construction-Kit.
            </summary>
            <summary>
            ColorPicker
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ColorPicker.SelectedColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.DefaultModels">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.SelectionRing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.AlphaProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.CanUpDownComponentsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.CanUpDownComponents">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ComponentStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ComponentStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ComponentValueWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ComponentValueWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ComponentWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ComponentWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.IlluminantProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.Illuminant">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.InitialColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.InitialColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.IsAsyncProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.IsAsync">
            <summary>
            Gets or sets whether or not to use asynchronous bindings.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ModelsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.Models">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ObserverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.Observer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.SelectedComponentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.SelectedComponent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.SelectedColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.SelectedColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ShowComponentsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ShowComponents">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ShowNewCurrentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ShowNewCurrent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ShowSliderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ShowSlider">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorPicker.ShowAlphaProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorPicker.ShowAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnColorSpaceAdded(System.Object,Imagin.Common.Input.EventArgs{Imagin.Controls.Common.ColorSpaceModel})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnComponentSelected(System.Object,Imagin.Common.Input.SelectedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnInitialColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnModelsChanged(Imagin.Controls.Common.ColorSpaceCollection,Imagin.Controls.Common.ColorSpaceCollection)">
            <summary>
            
            </summary>
            <param name="Old"></param>
            <param name="New"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnSelectedColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnShowAlphaChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.OnShowComponentsChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorPicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ColorSpaceCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ComponentCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComponentCollection.Item(System.Type)">
            <summary>
            
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ComponentCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ColorSelector">
            <summary>
            
            </summary>
            <summary>
            ColorSelector
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.AlphaProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.ColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.IlluminantProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.Illuminant">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.SelectedComponentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.SelectedComponent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.ModelsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.Models">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.ObserverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.Observer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.SelectionRingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.SelectionRing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.ShowSliderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.ShowSlider">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelector.ShowAlphaProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ColorSelector.ShowAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ColorSelector.AlphaChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ColorSelector.ColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.IncrementSlider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.OnAlphaChanged(System.Object,Imagin.Common.Input.EventArgs{System.Byte})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.OnColorChanged(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.OnIlluminantChanged(Imagin.Common.Drawing.Illuminant)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.OnSelectedComponentChanged(Imagin.Controls.Common.SelectableComponentModel)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.OnSelectionRingChanged(Imagin.Controls.Common.ColorSelectorRing)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ColorSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ColorSelectorRing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelectorRing.White">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelectorRing.Black">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelectorRing.BlackAndWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColorSelectorRing.BlackOrWhite">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.ComboBox.Entered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComboBox.CheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComboBox.CheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComboBox.PlaceholderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComboBox.Placeholder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ComboBox.UncheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ComboBox.UncheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComboBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComboBox.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ComboBox.OnEntered(System.String)">
            <summary>
            
            </summary>
            <param name="Text"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ButtonChrome">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.CornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.CornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.InnerCornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.InnerCornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderCheckedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderChecked">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderFocusedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderFocused">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderMouseOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderMouseOver">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderNormalProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderNormal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ButtonChrome.RenderPressedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ButtonChrome.RenderPressed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ButtonChrome.OnCornerRadiusChanged(System.Windows.CornerRadius,System.Windows.CornerRadius)">
            <summary>
            
            </summary>
            <remarks>
            The <see cref="P:Imagin.Controls.Common.ButtonChrome.InnerCornerRadius"/> should be one less than the <see cref="P:Imagin.Controls.Common.ButtonChrome.CornerRadius"/>.
            </remarks>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Imagin.Controls.Common.ClippedBorder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ClippedBorder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ColumnResizeMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColumnResizeMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColumnResizeMode.Resize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ColumnResizeMode.ResizeWithPreview">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Converters.FeaturedPropertyVisibilityConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Converters.FeaturedPropertyVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Converters.FeaturedPropertyVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetTypes"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.DataGrid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DataGrid.SelectedItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DataGrid.SelectedItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DataGrid.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DataGrid.OnSelectedItemsChanged(System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.DirectionalNavigation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionalNavigation.Circular">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionalNavigation.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.GradientPicker">
            <summary>
            
            </summary>
            <summary>
            GradientPicker
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.GradientPicker.GradientChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.DefaultGradientStops">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.DefaultLinearGradient">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.DefaultRadialGradient">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.Supported">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.AngleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.Angle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.AngularUnitProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.AngularUnit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.BandsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.Bands">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.GradientProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.Gradient">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.GradientPositionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.GradientPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.GradientTypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.GradientType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.OffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.PreviewBorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.PreviewBorderBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.PreviewBorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.PreviewBorderThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.RadiansProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.Radians">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.SelectedBandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.SelectedBand">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.SelectedColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.SelectedColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.GradientPicker.ShowPreviewProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.GradientPicker.ShowPreview">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnAngleChanged(System.Double)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnBandsChanged(System.Int32)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnGradientChanged(System.Windows.Media.Brush)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnGradientChanged(Imagin.Common.Input.EventArgs{System.Windows.Media.Brush})">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnGradientCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnGradientPositionChanged(Imagin.Common.Media.GradientPosition)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnGradientTypeChanged(Imagin.Common.Media.GradientType)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnOffsetChanged(System.Double)">
            <summary>
            
            </summary>
            <param name="Offset"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnSelectedBandChanged(System.Int32)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnSelectedBandChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.OnSelectedColorChanged(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.GradientPicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.HexagonButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.HexagonButton.Radius">
            <summary>
            Corresponds to path geometry in XAML.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.HexagonButton.Offset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HexagonButton.NominalColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.HexagonButton.UsesGradientsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HexagonButton.UsesGradients">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.HexagonButton.StrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HexagonButton.StrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HexagonButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HexagonButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HexagonButton.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.HexagonButton.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.IBrushPicker`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Imagin.Controls.Common.LocalizedTextBlock">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.LocalizedTextBlock.LocalizedTextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LocalizedTextBlock.LocalizedText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.LocalizedTextBlock.TextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LocalizedTextBlock.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.LocalizedTextBlock.TextStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LocalizedTextBlock.TextStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.LocalizedTextBlock.TextTrimmingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LocalizedTextBlock.TextTrimming">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.LocalizedTextBlock.TextWrappingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.LocalizedTextBlock.TextWrapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LocalizedTextBlock.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.LocalizedTextBlock.OnTextChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.LocalizedTextBlock.OnTextStyleChanged(System.Windows.Style)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.DependencyProperty`2">
            <summary>
            
            </summary>
            <typeparam name="TProperty"></typeparam>
            <typeparam name="TOwner"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.DependencyProperty`2.#ctor(System.String,System.Windows.PropertyMetadata)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="metadata"></param>
        </member>
        <member name="P:Imagin.Controls.Common.DependencyProperty`2.Property">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DependencyProperty`2.Get(`1)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DependencyProperty`2.Set(`1,`0)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Input.TextSubmittedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Input.TextSubmittedEventArgs.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Input.TextSubmittedEventArgs.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Text"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Lang.Main">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Ascending">
            <summary>
              Looks up a localized string similar to Ascending.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Back">
            <summary>
              Looks up a localized string similar to Back.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Background">
            <summary>
              Looks up a localized string similar to Background.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Bind">
            <summary>
              Looks up a localized string similar to Bind.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.BottomLeft">
            <summary>
              Looks up a localized string similar to Bottom left.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.BottomRight">
            <summary>
              Looks up a localized string similar to Bottom right.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Clear">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.CollapseGroups">
            <summary>
              Looks up a localized string similar to Collapse Groups.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Collection">
            <summary>
              Looks up a localized string similar to Collection.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Current">
            <summary>
              Looks up a localized string similar to Current.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Decrease">
            <summary>
              Looks up a localized string similar to Decrease.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Descending">
            <summary>
              Looks up a localized string similar to Descending.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Disconnect">
            <summary>
              Looks up a localized string similar to Disconnect.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Enter">
            <summary>
              Looks up a localized string similar to Enter.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Font">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.FontSize">
            <summary>
              Looks up a localized string similar to Font Size.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Foreground">
            <summary>
              Looks up a localized string similar to Foreground.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.HideCategories">
            <summary>
              Looks up a localized string similar to Hide categories.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.HidePassword">
            <summary>
              Looks up a localized string similar to Hide password.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Increase">
            <summary>
              Looks up a localized string similar to Increase.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Name">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.New">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Options">
            <summary>
              Looks up a localized string similar to Options.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Password">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Repeat">
            <summary>
              Looks up a localized string similar to Repeat.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Reset">
            <summary>
              Looks up a localized string similar to Reset.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Search">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.ShowCategories">
            <summary>
              Looks up a localized string similar to Show categories.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.ShowPassword">
            <summary>
              Looks up a localized string similar to Show password.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Sort">
            <summary>
              Looks up a localized string similar to Sort.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.SortDirection">
            <summary>
              Looks up a localized string similar to Sort Direction.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Swap">
            <summary>
              Looks up a localized string similar to Swap.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.TopLeft">
            <summary>
              Looks up a localized string similar to Top left.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.TopRight">
            <summary>
              Looks up a localized string similar to Top right.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Type">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Unbind">
            <summary>
              Looks up a localized string similar to Unbind.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Lang.Main.Username">
            <summary>
              Looks up a localized string similar to Username.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.EnableCopyCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.SetEnableCopyCommand(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.GetEnableCopyCommand(System.Windows.Controls.Primitives.TextBoxBase)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.EnableCutCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.SetEnableCutCommand(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.GetEnableCutCommand(System.Windows.Controls.Primitives.TextBoxBase)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.EnablePasteCommandProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.SetEnablePasteCommand(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TextBoxBaseExtensions.GetEnablePasteCommand(System.Windows.Controls.Primitives.TextBoxBase)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.ControlExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsPossibleDropTarget">
            <summary>
            Indicates whether or not the current item is a possible drop target
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.ContentProperty">
            <summary>
            Enables assigning any FrameworkElement a 'content' object.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetContent(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.SetContent(System.Windows.Controls.Control,System.Object)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsDraggingOverKey">
            <summary>
            Indicates whether or not the current item is a possible drop target
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsDraggingOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetIsDraggingOver(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsMouseDirectlyOverKey">
            <summary>
            Indicates whether or not the mouse is directly over an item.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsMouseDirectlyOverProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetIsMouseDirectlyOver(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ControlExtensions.IsReadOnlyProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.SetIsReadOnly(System.Windows.Controls.Control,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.GetIsReadOnly(System.Windows.Controls.Control)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.OnUpdateOverItem(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            This method is a listener for the UpdateOverItemEvent.  
            When it is received, it means that the sender is the 
            closest item to the mouse (closest logically, not visually).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Called when an item is dragged over the control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ControlExtensions.OnDragLeave(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Called when the drag cursor leaves the control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.FlowDocumentExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FlowDocumentExtensions.Paragraphs(System.Windows.Documents.FlowDocument)">
            <summary>
            Gets all paragraphs for the given <see cref="T:System.Windows.Documents.FlowDocument"/>.
            </summary>
            <param name="Document"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.FrameworkElementExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions._ContextMenuProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.Get_ContextMenu(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.Set_ContextMenu(System.Windows.FrameworkElement,System.Windows.Controls.ContextMenu)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.BackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetBackground(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetBackground(System.Windows.FrameworkElement,System.Windows.Media.Brush)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.BorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetBorderBrush(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetBorderBrush(System.Windows.FrameworkElement,System.Windows.Media.Brush)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.BorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetBorderThickness(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetBorderThickness(System.Windows.FrameworkElement,System.Windows.Thickness)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.CornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetCornerRadius(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetCornerRadius(System.Windows.FrameworkElement,System.Windows.CornerRadius)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.EnableContextMenuProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetEnableContextMenu(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetEnableContextMenu(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.IsDragMoveEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.GetIsDragMoveEnabled(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.SetIsDragMoveEnabled(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.FindStyle``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="Element"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.FrameworkElementExtensions.TryFindStyle``1(``0,System.Windows.Style@)">
            <summary>
            
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="Element"></param>
            <param name="Style"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.DependencyObjectExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.IsVisibleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.SetIsVisible(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.GetIsVisible(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.Select(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Select the given element, if supported; element is valid if supports <see cref="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)"/> or is <see cref="T:System.Windows.Controls.TreeViewItem"/>.
            </summary>
            <param name="Value"></param>
            <param name="IsSelected"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DependencyObjectExtensions.TrySelect(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Attempt to select the given element, if supported; element is valid if supports <see cref="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)"/> or is <see cref="T:System.Windows.Controls.TreeViewItem"/>.
            </summary>
            <param name="Object"></param>
            <param name="IsSelected"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.PanelExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.HorizontalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetHorizontalContentAlignment(System.Windows.Controls.Panel,System.Windows.HorizontalAlignment)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetHorizontalContentAlignment(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.SpacingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetSpacing(System.Windows.Controls.Panel,System.Windows.Thickness)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetSpacing(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.TrimFirstProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetTrimFirst(System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetTrimFirst(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.TrimLastProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetTrimLast(System.Windows.Controls.Panel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetTrimLast(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.PanelExtensions.VerticalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.SetVerticalContentAlignment(System.Windows.Controls.Panel,System.Windows.VerticalAlignment)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.PanelExtensions.GetVerticalContentAlignment(System.Windows.Controls.Panel)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.DataGridExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ExtendsDefaultBehaviorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetExtendsDefaultBehavior(Imagin.Controls.Common.DataGrid)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetExtendsDefaultBehavior(Imagin.Controls.Common.DataGrid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.AddCommand">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.DisplayRowNumberProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetDisplayRowNumber(Imagin.Controls.Common.DataGrid)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetDisplayRowNumber(Imagin.Controls.Common.DataGrid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.DisplayRowNumberOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetDisplayRowNumberOffset(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetDisplayRowNumberOffset(System.Windows.DependencyObject,System.Int32)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions._ScrollAddedIntoView">
            <summary>
            Stores reference to every <see cref="T:Imagin.Controls.Common.DataGrid"/> with <see cref="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty"/> enabled; the key is the hash code of the value's underlying collection.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty">
            <summary>
            Gets or sets whether or not to scroll newly added items into view; note, the underlying collection MUST implement <see cref="T:Imagin.Common.Collections.Generic.ITrackableCollection`1"/>.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.GetScrollAddedIntoView(Imagin.Controls.Common.DataGrid)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.SetScrollAddedIntoView(Imagin.Controls.Common.DataGrid,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when <see cref="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty"/> changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(Imagin.Controls.Common.DataGrid,Imagin.Common.Collections.ITrackableCollection,System.Boolean)">
            <summary>
            Adds/removes and registers/unregisters events associated with <see cref="F:Imagin.Controls.Common.Extensions.DataGridExtensions.ScrollAddedIntoViewProperty"/>, respectively.
            </summary>
            <param name="DataGrid"></param>
            <param name="Collection"></param>
            <param name="Register"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when <see cref="T:Imagin.Controls.Common.DataGrid"/> loads.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.DataGridExtensions.OnScrollAddedIntoViewChanged(System.Object,Imagin.Common.Input.EventArgs{System.Object})">
            <summary>
            Occurs when an item is added to the <see cref="T:Imagin.Controls.Common.DataGrid"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.ItemsControlExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.AutoSizeColumnsProperty">
            <summary>
            Applies GridUnit.Star GridLength to all columns.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetAutoSizeColumns(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetAutoSizeColumns(System.Windows.Controls.ItemsControl,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.CanDragSelectProperty">
            <summary>
            Gets or sets value indicating whether ItemsControl should allow drag selecting items.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetCanDragSelect(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetCanDragSelect(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.IsColumnMenuEnabledProperty">
            <summary>
            Determines whether or not to add a ContextMenu to the column header for toggling column visibility.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetIsColumnMenuEnabled(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetIsColumnMenuEnabled(System.Windows.Controls.ItemsControl,System.Boolean)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.DragScrollOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetDragScrollOffset(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetDragScrollOffset(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.DragScrollToleranceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetDragScrollTolerance(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetDragScrollTolerance(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SelectNoneOnEmptySpaceClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.GetSelectNoneOnEmptySpaceClick(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.SetSelectNoneOnEmptySpaceClick(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.CollapseSiblings(System.Windows.Controls.ItemsControl,System.Windows.Controls.TreeViewItem)">
            <summary>
            Collapse all items in ItemsControl (siblings of <param name="Source"/>).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.ClearSelection(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="ToEvaluate"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.Select(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            
            </summary>
            <param name="Control"></param>
            <param name="Item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.ItemsControlExtensions.TryClearSelection(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="ToEvaluate"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ListBoxExtensions.IsDirectionalSelectionEnabledProperty">
            <summary>
            Determines whether or not directional keys can 
            be used to select items; intended for complex 
            views where items are organized in both rows 
            and columns.
            </summary>
            <pseudo>
            If up or left is clicked and nothing is selected, 
            select first. If bottom or right is clicked and 
            nothing is selected, select last. If first is 
            selected and clicking left or up, select last. 
            If last is selected and clicking right or down, 
            select first.
            </pseudo>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.ListBoxExtensions.SelectionWrapProperty">
            <summary>
            Determines whether or not selections made with directional keys "wrap" ends.
            </summary>
            <remarks>
            IsDirectionalSelectionEnabled must be set to true.
            </remarks>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.MenuItemExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.MenuItemExtensions.elements">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.MenuItemExtensions.GroupNameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.SetGroupName(System.Windows.Controls.MenuItem,System.String)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.GetGroupName(System.Windows.Controls.MenuItem)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.MenuItemExtensions.SelectionModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.SetSelectionMode(System.Windows.Controls.MenuItem,Imagin.Controls.Common.MenuItemSelectionMode)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.GetSelectionMode(System.Windows.Controls.MenuItem)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.MenuItemExtensions.OnChecked(System.Object,System.Windows.RoutedEventArgs)">
            <remarks>
            Let's assume the MenuItem was generated from
            a collection of enum values. The data context 
            for the MenuItem would be = to a unique enum 
            value. The GroupSource should be bound to a 
            property somewhere that stores a reference to 
            the current enum value. When checking a MenuItem,
            it is necessary to update the GroupSource so the
            source reflects the checked value. The GroupSource
            should only update when an initial value has
            been set. 
            </remarks>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.TreeViewExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate(System.Windows.Controls.ItemsControl,System.Action{System.Object,System.Windows.Controls.ItemsControl})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child.
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate(System.Windows.Controls.ItemsControl,System.Func{System.Object,System.Windows.Controls.ItemsControl,System.Nullable{System.Boolean}})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child; return false to continue (skip children, continue with next), null to break (skip everything else), or true (proceed normally).
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate(System.Windows.Controls.ItemsControl,System.Action{System.Object,System.Windows.Controls.ItemsControl},System.Int32[])">
            <summary>
            Enumerate given indices of <see cref="T:System.Windows.Controls.ItemsControl"/> and perform given action for each child.
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
            <param name="Indices"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate``1(System.Windows.Controls.ItemsControl,System.Action{``0,System.Windows.Controls.ItemsControl})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child.
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate``1(System.Windows.Controls.ItemsControl,System.Func{``0,System.Windows.Controls.ItemsControl,System.Nullable{System.Boolean}})">
            <summary>
            Enumerate <see cref="T:System.Windows.Controls.ItemsControl"/> performing given action for each child; return false to continue (skip children, continue with next), null to break (skip everything else), or true (proceed normally). 
            <para>(recursive)</para>
            </summary>
            <param name="Control"></param>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.Enumerate``1(System.Windows.Controls.ItemsControl,System.Action{``0,System.Windows.Controls.ItemsControl},System.Int32[])">
            <summary>
            Enumerate given indices of <see cref="T:System.Windows.Controls.ItemsControl"/> and perform given action for each child. 
            <para>(recursive)</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Control"></param>
            <param name="Action"></param>
            <param name="Indices"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.GetAllItems(System.Windows.Controls.ItemsControl,System.Collections.Generic.ICollection{System.Windows.Controls.TreeViewItem})">
            <summary>
            
            </summary>
            <param name="Control"></param>
            <param name="AllItems"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItem(Imagin.Controls.Common.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="Item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItems(Imagin.Controls.Common.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="Item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItemsContinuously(Imagin.Controls.Common.TreeView,System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="TreeViewItem"></param>
            <param name="ShiftControl"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectItemsRandomly(Imagin.Controls.Common.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="TreeViewItem"></param>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectNone(System.Windows.Controls.ItemsControl)">
            <summary>
            
            </summary>
            <param name="Control"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectedItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.GetSelectedItems(Imagin.Controls.Common.TreeView)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SetSelectedItems(Imagin.Controls.Common.TreeView,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="Value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TreeViewExtensions.SelectionModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.GetSelectionMode(Imagin.Controls.Common.TreeView)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewExtensions.SetSelectionMode(Imagin.Controls.Common.TreeView,Imagin.Controls.Common.TreeViewSelectionMode)">
            <summary>
            
            </summary>
            <param name="TreeView"></param>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.TreeViewItemExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.CollapseSiblings(System.Windows.Controls.TreeViewItem)">
            <summary>
            Collapses siblings of <param name="Item"/>.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.GetDepth(System.Windows.Controls.TreeViewItem)">
            <summary>
            Get depth for given node.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.CollapseSiblingsOnClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.GetCollapseSiblingsOnClick(System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.SetCollapseSiblingsOnClick(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <param name="Value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.IsSelectedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.GetIsSelected(System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.SetIsSelected(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <param name="Value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.ExpandOnClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.GetExpandOnClick(System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.SetExpandOnClick(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <param name="Value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.SelectOnRightClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.GetSelectOnRightClick(System.Windows.Controls.TreeViewItem)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.TreeViewItemExtensions.SetSelectOnRightClick(System.Windows.Controls.TreeViewItem,System.Boolean)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.WindowExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.cbSize">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.rcMonitor">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.rcWork">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MONITORINFO.dwFlags">
            <summary>
            </summary>            
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.SinkerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.GetSinker(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.SetSinker(System.Windows.DependencyObject,Imagin.Controls.Common.WindowSinker)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.AlwaysOnBottomProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.GetAlwaysOnBottom(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.SetAlwaysOnBottom(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.IconProperty">
            <summary>
            Gets or sets a value indicating whether window should implement default behavior; this is only applicable when window
            a) overrides default style,
            b) allows transparency, and
            c) style is set to 'None'.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.GetIcon(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.SetIcon(System.Windows.DependencyObject,System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.OverridesDefaultBehaviorProperty">
            <summary>
            Gets or sets a value indicating whether window should implement default behavior; this is only applicable when window
            a) overrides default style,
            b) allows transparency, and
            c) style is set to 'None'.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.GetOverridesDefaultBehavior(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.SetOverridesDefaultBehavior(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.WindowExtensions.MINMAXINFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MINMAXINFO.ptReserved">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MINMAXINFO.ptMaxSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MINMAXINFO.ptMaxPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MINMAXINFO.ptMinTrackSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.MINMAXINFO.ptMaxTrackSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.WindowExtensions.POINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.POINT.x">
            <summary>
            x coordinate of point.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.POINT.y">
            <summary>
            y coordinate of point.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point of coordinates (x,y).
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Extensions.WindowExtensions.RECT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.left">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.top">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.right">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.bottom">
            <summary> Win32 </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Empty">
            <summary> Win32 </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Width">
            <summary> Win32 </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Height">
            <summary> Win32 </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Win32 </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.#ctor(Imagin.Controls.Common.Extensions.WindowExtensions.RECT)">
            <summary> Win32 </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.IsEmpty">
            <summary> Win32 </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.ToString">
            <summary> Return a user friendly representation of this struct </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.op_Equality(Imagin.Controls.Common.Extensions.WindowExtensions.RECT,Imagin.Controls.Common.Extensions.WindowExtensions.RECT)">
            <summary> Determine if 2 RECT are equal (deep compare)</summary>
        </member>
        <member name="M:Imagin.Controls.Common.Extensions.WindowExtensions.RECT.op_Inequality(Imagin.Controls.Common.Extensions.WindowExtensions.RECT,Imagin.Controls.Common.Extensions.WindowExtensions.RECT)">
            <summary> Determine if 2 RECT are different(deep compare)</summary>
        </member>
        <member name="T:Imagin.Controls.Common.FlagCheckView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.FlagsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.ItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.Items">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.ItemsPanelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.ItemsPanel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FlagCheckView.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FlagCheckView.ItemTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnFlagsChanged(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnItemAdded(System.Object,Imagin.Common.Input.EventArgs{Imagin.Common.CheckableObject{System.Object}})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnItemChecked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FlagCheckView.OnItemUnchecked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.Interactivity.AutoPositionPopupBehavior">
            <summary>
            Auto-positions popup when the parent element's position changes (TO-DO: support scrolling).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Interactivity.AutoPositionPopupBehavior.OnAttached">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Interactivity.AutoPositionPopupBehavior.Update">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Menu">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Menu.AdjacentContentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Menu.AdjacentContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Menu.OpposingContentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Menu.OpposingContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Menu.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MenuItemSelectionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MenuItemSelectionMode.Single">
            <summary>
            One item may be checked.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MenuItemSelectionMode.SingleOrNone">
            <summary>
            Either one or no items may be checked.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MenuItemSelectionMode.Multiple">
            <summary>
            Any number of items may be checked; equivalent to
            not specifying a group name.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.NewCurrent">
            <summary>
            
            </summary>
            <summary>
            NewCurrent
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NewCurrent.NewColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NewCurrent.NewColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NewCurrent.CurrentColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NewCurrent.CurrentColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NewCurrent.AlphaProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NewCurrent.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NewCurrent.OrientationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NewCurrent.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NewCurrent.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NewCurrent.OnAlphaChanged(System.Byte)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NewCurrent.OnOrientationChanged(System.Windows.Controls.Orientation,System.Windows.Controls.Orientation)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NewCurrent.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.CoercedPropertyModel`1">
            <summary>
            Represents a property that has both a minimum and maximum value.
            </summary>
            <typeparam name="TPrimitive"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.CoercedPropertyModel`1.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CoercedPropertyModel`1.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CoercedPropertyModel`1.SetConstraint(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="minimum"></param>
            <param name="maximum"></param>
        </member>
        <member name="T:Imagin.Controls.Common.CoercedVariantPropertyModel`2">
            <summary>
            Represents a property with a type that uses another type to modify it, and has both a minimum and maximum value.
            </summary>
            <typeparam name="TVariant">The type used to modify the property.</typeparam>
            <typeparam name="TPrimitive">The actual type of the property.</typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.CoercedVariantPropertyModel`2.Variant">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CoercedVariantPropertyModel`2.OnValueChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.CoercedVariantPropertyModel`2.OnVariantChanged(System.Object,Imagin.Common.Input.EventArgs{`1})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.NestedPropertyModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NestedPropertyModel.Primitive">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NestedPropertyModel.OnValueChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyModel">
            <summary>
            The base implementation to represent an object property.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyModel.HostPropertyChangeHandled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyModel.ValueChangeHandled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyModel.source">
            <summary>
            Gets or sets the object this property belongs to.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyModel.info">
            <summary>
            Gets the <see cref="T:System.Reflection.PropertyInfo"/> for the property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.SupportedTypes">
            <summary>
            A list of all supported types.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Category">
            <summary>
            Gets or sets the property category.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Description">
            <summary>
            Gets or sets the property description.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.DisplayName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.IsFeatured">
            <summary>
            Gets whether or not the property is featured.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.IsEnabled">
            <summary>
            Gets whether or not the property is enabled.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.IsReadOnly">
            <summary>
            Gets whether or not the property is readonly.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.LocalizedCategory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Primitive">
            <summary>
            Gets the actual property type (note, if the property is nullable, this will be the underlying type).
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.StringFormat">
            <summary>
            Gets or sets the string format for the property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Tag">
            <summary>
            An object for general use.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Type">
            <summary>
            Gets the <see cref="T:System.String"/> representation of the property's type.
            </summary>
            <remarks>
            Used for sorting only.
            </remarks>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel.Value">
            <summary>
            Gets or sets the current value for the property.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.New(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.PropertyModel"/> class based on given type. 
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.New(System.Object,System.Reflection.PropertyInfo,Imagin.Controls.Common.PropertyAttributes,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.PropertyModel"/> class based on given data; some restrictions are observed.
            </summary>
            <param name="source"></param>
            <param name="propertyInfo"></param>
            <param name="propertyAttributes"></param>
            <param name="isNested"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.New(System.Type,System.Object,System.String,System.Object,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.PropertyModel"/> class based on given type and values; no restrictions.
            </summary>
            <param name="Type"></param>
            <param name="Host"></param>
            <param name="Name"></param>
            <param name="Value"></param>
            <param name="Category"></param>
            <param name="Description"></param>
            <param name="StringFormat"></param>
            <param name="IsReadOnly"></param>
            <param name="IsFeatured"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.OnPreviewValueChanged(System.Object,System.Object)">
            <summary>
            Occurs just before setting the value.
            </summary>
            <param name="OldValue">The original value.</param>
            <param name="NewValue">The new value.</param>
            <returns>The actual value to set for the property.</returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.OnValueChanged(System.Object)">
            <summary>
            Occurs when the value changes.
            </summary>
            <param name="Value">The new value.</param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel.RefreshValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyModel`1">
            <summary>
            Represents an object property with specific type.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel`1.Default">
            <summary>
            Gets the default value of the property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModel`1.Primitive">
            <summary>
            Gets the underlying property type.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModel`1.OnPreviewValueChanged(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyAttribute.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyAttribute.Attribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyAttribute.#ctor(System.Attribute)">
            <summary>
            
            </summary>
            <param name="Attribute"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyAttribute.SetAttribute(System.Attribute)">
            <summary>
            
            </summary>
            <param name="Attribute"></param>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyAttribute`1">
            <summary>
            
            </summary>
            <typeparam name="TAttribute"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyAttribute`1.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyAttribute`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="Attribute"></param>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyAttributes.#ctor(Imagin.Controls.Common.PropertyAttribute[])">
            <summary>
            
            </summary>
            <param name="Attributes"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyAttributes.ExtractFrom(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="Property"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyAttributes.Get``1">
            <summary>
            
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyGridBase">
            <summary>
            
            </summary>
            <summary>
            PropertyGridBase
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.isNesting">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.nest">
            <summary>
            Stores a reference to every nested property relative to the original host; properties are stored in order of depth.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.AcceptsNullObjectsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.AcceptsNullObjects">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ButtonsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.Buttons">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.CanResizeDescriptionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.CanResizeDescription">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.CollapseGroupsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.CollapseGroups">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.DataGridStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DataGridStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.DateTimeFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DateTimeFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.DescriptionStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DescriptionStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.DescriptionTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DescriptionTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.DescriptionTemplateSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DescriptionTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.DescriptionVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DescriptionVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.FileSizeFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.FileSizeFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.GridLinesVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.GridLinesVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.HeadersVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.HeadersVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ListCollectionViewProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ListCollectionView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.LoaderTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.LoaderTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.IsLoadingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.IsLoading">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.IsSortAscendingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.IsSortAscending">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.IsSortDescendingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.IsSortDescending">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.IsSourceEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.IsSourceEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.NestedPropertyStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.NestedPropertyStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.NestedPropertyTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.NestedPropertyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.NestedPropertyTemplateSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.NestedPropertyTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.PropertiesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.Properties">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.PropertyColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.PropertyColumnWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.SearchQueryProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.SearchQuery">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ShowCategoriesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ShowCategories">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ShowFeaturedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ShowFeatured">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ShowHeaderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ShowHeader">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ShowTypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ShowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.SortByNameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.SortByName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.SortByTypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.SortByType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.SplitterStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.SplitterStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.TypeStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.TypeStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.TypeTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.TypeTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.TypeTemplateSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.TypeTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.PropertyGridBase.ValueColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ValueColumnWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.GetSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.Nest(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.RewindNest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.DisconnectSourceCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.NestCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.ResetSourceCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyGridBase.RewindNestCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.Group(System.String)">
            <summary>
            
            </summary>
            <param name="PropertyName"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.Sort">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnCanResizeDescriptionChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnDescriptionVisibilityChanged(System.Windows.Visibility)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnLanguageChanged(System.Object,Imagin.Common.Input.EventArgs{System.Globalization.CultureInfo})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnLoaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnUnloaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnShowCategoriesChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.OnSortChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyGridBase.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyModelCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModelCollection.ActiveProperty">
            <summary>
            The active, or selected, property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModelCollection.Featured">
            <summary>
            Gets the featured property, which is placed above all others.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyModelCollection.Source">
            <summary>
            Gets or sets the object that is currently hosted.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModelCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModelCollection.IsSupported(System.Reflection.PropertyInfo)">
            <summary>
            If the property is public (i.e., have public getter AND setter) AND:
            
            a) Has a type that is supported (nullable or not), 
            b) Is <see cref="T:System.Enum"/>, or 
            c) Implements <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="Property"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModelCollection.OnItemAdded(Imagin.Controls.Common.PropertyModel)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModelCollection.LoadAsync(System.Object,System.Action)">
            <summary>
            Set properties by enumerating the properties of an object.
            </summary>
            <param name="source">The object to examine.</param>
            <param name="callback">What to do afterwards.</param>
            <remarks>
            TO-DO: Evaluate dynamic properties if the object implements a certain interface? 
            
            Dynamic properties would be properties that don't need to be owned by the object
            and cannot be modified, but should be displayed to the user anyway. 
            
            The object would have to specify how to get the value for each dynamic property 
            internally using an action; the action simply returns the object we want.
            
            The interface would expose a method that accepts the latter-described action,
            invokes it, and returns the resulting object (the current value of the 
            dynamic property). Note, this enables you to calculate the value for the 
            dynamic property however you like.
            
            If the object implements this interface, we can safely check for dynamic 
            properties. While enumerating, we'd get the initial value; subsequently,
            we'd need a way of updating it when it should be (another TO-DO).
            
            Assuming each dynamic property specifies a general type, we'll know what type
            to cast to when retrieving the it's value.
            
            Ultimately, this would enable you to display properties in addition to the ones
            the object already owns without the additional overhead.
            </remarks>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModelCollection.LoadAsync(System.Windows.ResourceDictionary,System.Action)">
            <summary>
            Set properties by enumerating a resource dictionary.
            </summary>
            <param name="source">The dictionary to enumerate.</param>
            <param name="callback">What to do afterwards.</param>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyModelCollection.Reset(System.Object)">
            <summary>
            Clear all properties and assign a reference to the given object, if any.
            </summary>
            <param name="source"></param>
        </member>
        <member name="T:Imagin.Controls.Common.PropertyTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.PropertyTemplateSelector.Resources">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.PropertyTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ResourceDictionaryEditor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.FollowSource(System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.GetSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.IgnoreSource(System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.Nest(System.Object)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.RewindNest">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResourceDictionaryEditor.GetPropertiesAsync(System.Windows.ResourceDictionary)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.SelectionCanvas">
            <summary>
            SelectionCanvas
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.SelectionCanvas.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.SelectionCanvas.IsDragging">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.SelectionCanvas.StartPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.SelectionCanvas.ResetOnDrawnProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.SelectionCanvas.ResetOnDrawn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.SelectionCanvas.SelectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.SelectionCanvas.Selection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectionCanvas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.SelectionCanvas.OnSelected(Imagin.Common.Primitives.Selection)">
            <summary>
            
            </summary>
            <param name="Selection"></param>
        </member>
        <member name="M:Imagin.Controls.Common.SelectionCanvas.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.CheckableStorageCollection">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.CheckableStorageCollection.ItemStateChanged">
            <summary>
            Occurs whenever an item's state changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageCollection.OnItemAdded(Imagin.Controls.Common.CheckableStorageObject)">
            <summary>
            
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageCollection.OnItemRemoved(Imagin.Controls.Common.CheckableStorageObject)">
            <summary>
            
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageCollection.OnPreviewItemsCleared">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.CheckableStorageObject">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.CheckableStorageObject.Collapsed">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.CheckableStorageObject.Expanded">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.CheckableStorageObject.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckableStorageObject.Children">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckableStorageObject.IsExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckableStorageObject.IsSelected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckableStorageObject.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckableStorageObject.QueryOnExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckableStorageObject.IsChecked">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.#ctor(System.String,Imagin.Common.IO.ISystemObjectProvider,System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="systemObjectProvider"></param>
            <param name="isChecked"></param>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.OnChecked">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.OnStateChanged(System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="State"></param>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.OnUnchecked">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.OnCollapsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.OnExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.OnSelected(Imagin.Common.Input.SelectedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.CheckableStorageObject.BeginQuery(Imagin.Common.IO.ISystemObjectProvider)">
            <summary>
            
            </summary>
            <param name="SystemProvider"></param>
        </member>
        <member name="T:Imagin.Controls.Common.StoragePicker">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.SystemObjectsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.SystemObjects">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.CheckedPathsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.CheckedPaths">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.FileStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.FileStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.FileTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.FileTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.FolderStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.FolderStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.FolderTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.FolderTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.QueryOnExpandedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.QueryOnExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.RootProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.Root">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.StoragePicker.SystemObjectProviderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.StoragePicker.SystemObjectProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.StoragePicker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.StoragePicker.OnQueryOnExpandedChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.StoragePicker.OnRefreshed(Imagin.Common.IO.ISystemObjectProvider,System.String)">
            <summary>
            
            </summary>
            <param name="Provider"></param>
            <param name="Root"></param>
        </member>
        <member name="M:Imagin.Controls.Common.StoragePicker.OnRootChanged(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.StoragePicker.OnSystemObjectProviderChanged(Imagin.Common.IO.ISystemObjectProvider)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.StoragePicker.OnSystemObjectStateChanged(System.Object,Imagin.Common.Input.CheckedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.TabbedTree">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ColumnResizeModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ColumnResizeMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentBackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentBorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentBorderBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentBorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentBorderThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentHeaderTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentHeaderTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentHeaderVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentHeaderVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentPaddingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentPadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.ContentWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.ContentWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.MenuWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.MenuWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.MenuBackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.MenuBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.MenuBorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.MenuBorderBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.MenuBorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.MenuBorderThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.MenuPaddingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.MenuPadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TabbedTree.SplitterWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TabbedTree.SplitterWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TabbedTree.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TabbedTree.OnSelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TabbedTree.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.HexBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.HexBox.regex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.HexBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ParseBox`1">
            <summary>
            
            </summary>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="F:Imagin.Controls.Common.ParseBox`1.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ParseBox`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.SetText(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.OnValueChanged(`0)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ParseBox`1.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.RegexBoxBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RegexBoxBase.regex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBoxBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBoxBase.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.RegexBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RegexBox.regex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RegexBox.PatternProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RegexBox.Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RegexBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.VersionBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.VersionBox.DelimiterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.VersionBox.Delimiter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.VersionBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.VersionBox.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.VersionBox.ToString(System.Version)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.UriBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UriBox.KindProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UriBox.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UriBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UriBox.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UriBox.ToString(System.Uri)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ToggleSwitch">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ToggleSwitch.CornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ToggleSwitch.CornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ToggleSwitch.ThumbStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ToggleSwitch.ThumbStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ToggleSwitch.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ITokenizer">
            <summary>
            Specifies an object capable of tokenizing a <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ITokenizer.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer.ToString(System.Object)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.ITokenizer`1">
            <summary>
            
            </summary>
            <typeparam name="TToken"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.ITokenizer`1.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer`1.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer`1.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ITokenizer`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="T:Imagin.Controls.Common.StringTokenizer">
            <summary>
            Tokenizes a <see cref="T:System.String"/> into multiple <see cref="T:System.String"/>s.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.ToString(System.String)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.StringTokenizer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TokenButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenButton.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Tokenizer`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Tokenizer`1.Source">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.Tokenize(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="TokenString"></param>
            <param name="Delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.ParseToken(System.String)">
            <summary>
            Gets a token if the given <see cref="T:System.String"/> can be parsed.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Tokenizer`1.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="Source"></param>
        </member>
        <member name="T:Imagin.Controls.Common.TokenMouseAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenMouseAction.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenMouseAction.Edit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenMouseAction.Remove">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TokenView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.CurrentText">
            <summary>
            Gets the current input text.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenDelimiterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenDelimiter">
            <summary>
            The <see cref="T:System.Char"/> used to delimit tokens.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenizerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.Tokenizer">
            <summary>
            The <see cref="T:Imagin.Controls.Common.ITokenizer"/> that handles tokenizing.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenTriggersProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenTriggers">
            <summary>
            Keys used to generate tokens when pressed.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenMouseDownActionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenMouseDownAction">
            <summary>
            Gets or sets the action to perform when the mouse is down on token.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokensProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.Tokens">
            <summary>
            Gets a collection of all instances of tokens.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokensSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokensSource">
            <summary>
            Gets or sets a tokenized string.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenView.TokenStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TokenView.TokenStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.Enumerate``1(System.Func{``0,System.Boolean})">
            <summary>
            For each token, perform action exposing corresponding <see cref="T:Imagin.Controls.Common.TokenButton"/>.
            </summary>
            <typeparam name="TButton"></typeparam>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.Enumerate``2(System.Func{``0,``1,System.Boolean})">
            <summary>
            For each token, perform action exposing corresponding <see cref="T:Imagin.Controls.Common.TokenButton"/> and <see cref="T:System.Windows.Documents.Inline"/>.
            </summary>
            <typeparam name="TInline"></typeparam>
            <typeparam name="TButton"></typeparam>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.Enumerate``3(System.Func{``0,``1,``2,System.Boolean})">
            <summary>
            For each token, perform action exposing corresponding <see cref="T:Imagin.Controls.Common.TokenButton"/>, <see cref="T:System.Windows.Documents.Inline"/>, and <see cref="T:System.Windows.Documents.Paragraph"/>.
            </summary>
            <typeparam name="TParagraph"></typeparam>
            <typeparam name="TInline"></typeparam>
            <typeparam name="TButton"></typeparam>
            <param name="Action"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.GenerateInline(System.Object)">
            <summary>
            Generates an <see cref="T:System.Windows.Documents.Inline"/> element to host the given token.
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.GenerateRun(System.Object)">
            <summary>
            Generates a <see cref="T:System.Windows.Documents.Run"/> to host the <see cref="T:System.String"/> representation of the given token.
            </summary>
            <param name="Token"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.GetTokensSource">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.IntersectTokens">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.ReplaceWithToken(System.String,System.Object)">
            <summary>
            Replaces the given input text with the given token.
            </summary>
            <param name="Text"></param>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Occurs when the current text changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.EditToken(System.Object)">
            <summary>
            Converts the element that hosts the given token to a <see cref="T:System.Windows.Documents.Run"/>.
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.EditToken(Imagin.Controls.Common.TokenButton)">
            <summary>
            Converts the given token element to a <see cref="T:System.Windows.Documents.Run"/>.
            </summary>
            <param name="Button"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.RemoveToken(System.Object)">
            <summary>
            Removes the <see cref="T:System.Windows.Documents.Inline"/> that hosts the <see cref="T:Imagin.Controls.Common.TokenButton"/> corresponding to the given token.
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.RemoveToken(Imagin.Controls.Common.TokenButton)">
            <summary>
            Removes the <see cref="T:System.Windows.Documents.Inline"/> that hosts the given <see cref="T:Imagin.Controls.Common.TokenButton"/>.
            </summary>
            <param name="Button"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenDelimiterChanged(System.Char,System.Char)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.TokenView.TokenDelimiter"/> property changes.
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenLoaded(System.Object)">
            <summary>
            Occurs when a token has been loaded (or added both logically and visually).
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenUnloaded(System.Object)">
            <summary>
            Occurs when a token has been unloaded (or removed both logically and visually).
            </summary>
            <param name="Token"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokensSourceChanged(System.String)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.TokenView.TokensSource"/> property changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.TokenView.TokenStyle"/> property changes; if the style is null, the global style for <see cref="T:Imagin.Controls.Common.TokenButton"/> (if present) is used instead.
            </summary>
            <param name="OldValue"></param>
            <param name="NewValue"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TokenView.OnTokenTriggered">
            <summary>
            Occurs when some event triggers the creation of a token.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TokenTriggerKey">
            <summary>
            Specifies a key that is capable of generating a token when pressed.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.Return">
            <summary>
            Corresponds to <see cref="F:System.Windows.Input.Key.Enter"/>.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.Tab">
            <summary>
            Corresponds to <see cref="F:System.Windows.Input.Key.Tab"/>.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TokenTriggerKey.All">
            <summary>
            Corresponds to all enumerated keys.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TreeView">
            <summary>
            An extended version of <see cref="T:Imagin.Controls.Common.TreeView"/>.
            </summary>
            <remarks>
            Multi-selection borrowed from https://github.com/cmyksvoll/MultiSelectTreeView.
            </remarks>
        </member>
        <member name="E:Imagin.Controls.Common.TreeView.SelectedItemsChanged">
            <summary>
            Occurs when one or more items are selected or unselected.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.CanResizeColumnsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.CanResizeColumns">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderContextMenuProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderStyleSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderStyleSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderTemplateSelectorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderTemplateSelector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnHeaderVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.ColumnHeaderVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.ColumnsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.SelectedIndexProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.SelectedItemsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.SelectedItems">
            <summary>
            Get or set list of selected items.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.SelectedObjectProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.SelectedObject">
            <summary>
            Get or set selected object.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeView.SelectedVisualProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.SelectedVisual">
            <summary>
            Get or set visual associated with selected object.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.OnSelectedIndexChanged(System.Int32[])">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.OnSelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.OnSelectedItemsChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeView.OnSelectedObjectChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="P:Imagin.Controls.Common.TreeView.CollapseAllCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewColumnCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewColumnCollection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewRowHeader">
            <summary>
            A container used to present a TreeViewItem's header.
            </summary>
            <remarks>
            This is only needed if item is hosted in TreeViewExt
            and, therefore, supports showing multiple columns. If 
            columns should be hidden or otherwise aren't present,
            the item's header is shown by default.
            </remarks>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewRowHeader.ColumnOffsetProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewRowHeader.ColumnOffset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetColumnContent(Imagin.Controls.Common.TreeViewColumn,System.Windows.Controls.TreeViewItem)">
            <summary>
            Get content for specified item based on specified column.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetDefaultHeader(System.Windows.Controls.TreeViewItem)">
            <summary>
            If not hosted in TreeViewExt or shouldn't show multiple columns, display default header.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetHeader(Imagin.Controls.Common.TreeView,System.Windows.Controls.TreeViewItem)">
            <summary>
            Gets header for the specified item; columns are optional.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Hide the item while fetching the header; display item when finished. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.GetColumnDefinition(System.Windows.Controls.ContentPresenter,System.Int32)">
            <summary>
            
            </summary>
            <param name="Child"></param>
            <param name="Index"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewRowHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.AlignableWrapPanel">
            <summary>
            A WrapPanel with alignable content.
            </summary>
            <remarks>
            Borrowed from http://stackoverflow.com/questions/806777/wpf-how-can-i-center-all-items-in-a-wrappanel.
            </remarks>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.ItemWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.ItemWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.ItemHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.ItemHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.OrientationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.HorizontalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.HorizontalContentAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.AlignableWrapPanel.VerticalContentAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlignableWrapPanel.VerticalContentAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AlignableWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.AlignableWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            
            </summary>
            <param name="finalSize"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.AlignableWrapPanel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.CheckerBoard">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckerBoard.DrawingBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.CheckerBoard.CheckerForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckerBoard.CheckerForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.CheckerBoard.CheckerBackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckerBoard.CheckerBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.CheckerBoard.CheckerSizeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.CheckerBoard.CheckerSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.CheckerBoard.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DirectionPad">
            <summary>
            A rectangular control that enables specifying a 
            direction by clicking a directional arrow. Directional 
            arrows make all arrows shift in corresponding direction
             when clicked.
            </summary>
            <summary>
            DirectionPad
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.DirectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.ELabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.ELabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.EIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.EIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.NLabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.NLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.NIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.NIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.NELabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.NELabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.NEIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.NEIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.NWLabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.NWLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.NWIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.NWIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.OriginLabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.OriginLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.OriginIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.OriginIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.SLabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.SLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.SIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.SIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.SELabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.SELabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.SEIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.SEIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.SWLabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.SWLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.SWIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.SWIcon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.WLabelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.WLabel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DirectionPad.WIconProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DirectionPad.WIcon">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DirectionPad.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DirectionPad.OnLabelChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DirectionPad.OnIconChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DirectionPad.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.EditableLabel">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.EditableLabel.Edited">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.ButtonHorizontalAlignmentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.ButtonHorizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.IsEditableProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.IsEditable">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.MouseEventProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.MouseEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.ShowButtonProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.ShowButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.EditableLabel.TextTrimmingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.EditableLabel.TextTrimming">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnEntered(System.String)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.EditableLabel.OnEdited(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.FontSizeBox">
            <summary>
            A ComboBox containing traditional font sizes.
            </summary>
            <summary>
            FontSizeBox
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontSizeBox.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FontSizeBox.WheelTickMaxProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontSizeBox.WheelTickMax">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FontSizeBox.WheelTickMinProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontSizeBox.WheelTickMin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FontSizeBox.SizesProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontSizeBox.Sizes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FontSizeBox.WheelTickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontSizeBox.WheelTick">
            <summary>
            Value to incremenet/decrement on mouse wheel; set 0 to stick to default values.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FontSizeBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FontSizeBox.#ctor(System.Double[])">
            <summary>
            
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FontSizeBox.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FontSizeBox.Set(System.Double[])">
            <summary>
            
            </summary>
            <param name="Values"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FontSizeBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RippleDecorator">
            <summary>
            A container that applies a ripple effect to content.
            </summary>
            <remarks>
            If (RippleMouseEvent = MouseEvent.Default) 
                RepeatBehavior = Forever
                Animation begins without input
            </remarks>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.IsRippleEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.IsRippleEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.MaximumOpacityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.MaximumOpacity">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.MaximumRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.MaximumRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.ToStrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.ToStrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.FromStrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.FromStrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.RippleMouseEventProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleMouseEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.RippleAnimationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.RippleAccelerationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleAcceleration">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.RippleDecelerationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleDeceleration">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.RippleDelayProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleDelay">
            <summary>
            Animation delay in seconds.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RippleDecorator.RippleDurationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RippleDecorator.RippleDuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RippleDecorator.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RippleDecorator.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.RippleDecorator.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RippleDecorator.OnPropertyChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.AlphaNumericBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.AlphaNumericBox.regex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.AlphaNumericBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DragSelection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DragSelection.SelectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelection.Selection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelection.OnSelectionChanged(Imagin.Common.Primitives.Selection)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelection.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DragSelector">
            <summary>
            Provides logic for drag selecting over an ItemsControl.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.Grid">
            <summary>
            Element defined in template that wraps <see cref="T:System.Windows.Controls.ItemsPresenter"/>; used for mouse events.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.ScrollContentPresenter">
            <summary>
            <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> associated with <see cref="P:Imagin.Controls.Common.DragSelector.ScrollViewer"/>.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.ScrollViewer">
            <summary>
            Scrolling element defined in template.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DragSelector.Hash">
            <summary>
            Stores reference to ScrollViewer's style's hash code.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.IsDragging">
            <summary>
            Indicates if we're currently dragging.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.PreviousSelection">
            <summary>
            Stores reference to previously selected area.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DragSelector.StartPoint">
            <summary>
            Point indicating where the drag started.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when mouse is down; begins drag.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Ocurrs whenever mouse moves; drag is evaluated.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when mouse is up; ends drag.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.FindPresenter">
            <summary>
            Find and store reference to <see cref="P:Imagin.Controls.Common.DragSelector.ScrollContentPresenter"/> by searching <see cref="P:Imagin.Controls.Common.DragSelector.ScrollViewer"/> template.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.Scroll(System.Windows.Point)">
            <summary>
            Scroll based on current position.
            </summary>
            <param name="Position"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.IntersectsWith(System.Windows.Rect,System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Gets whether or not the given <see cref="T:System.Windows.Rect"/> intersects with either of the other two given <see cref="T:System.Windows.Rect"/>s: True if first, false if second, null if neither.
            </summary>
            <param name="Rect1"></param>
            <param name="Rect2"></param>
            <param name="Rect3"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.IntersectedWith(System.Windows.Rect)">
            <summary>
            Gets whether or not the given <see cref="T:System.Windows.Rect"/> intersects with any previous selection.
            </summary>
            <param name="Bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DragSelector.Select(System.Windows.Controls.ItemsControl,System.Windows.Rect)">
            <summary>
            Select items in control based on given area.
            </summary>
            <param name="Control"></param>
            <param name="Area"></param>
        </member>
        <member name="T:Imagin.Controls.Common.FontFamilyBox">
            <summary>
            A ComboBox containing system font families.
            </summary>
            <summary>
            FontFamilyBox
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FontFamilyBox.ShowPreviewProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FontFamilyBox.ShowPreview">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FontFamilyBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FontFamilyBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Link">
            <summary>
            Opens up a web link in default browser when clicked.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Link.TextDecorationsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Link.TextDecorations">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Link.TextTrimmingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Link.TextTrimming">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Link.TextWrappingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Link.TextWrapping">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Link.UriProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Link.Uri">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Link.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Link.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedDropDownButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedDropDownButton.DropDownProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedDropDownButton.DropDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedDropDownButton.DropDownDataContextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedDropDownButton.DropDownDataContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnDropDownChanged(System.Windows.Controls.ContextMenu)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnDropDownDataContextChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedDropDownButton.OnLoaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.SourceColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.SourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.SourceHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.SourceHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedImage.SourceWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedImage.SourceWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedImage.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedImage.OnSourceChanged(System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedImage.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.ContentMarginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.ContentMargin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownAnimationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownButtonToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownButtonToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownButtonVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownButtonVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownDataContextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownDataContext">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.DropDownPlacementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.DropDownPlacement">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.IsCheckedProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.IsChecked">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.IsRippleEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.IsRippleEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.SourceColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.SourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.SourceHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.SourceHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedButton.SourceWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedButton.SourceWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnDropDownChanged(System.Windows.Controls.ContextMenu)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnDropDownDataContextChanged(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnLoaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedButton.OnSourceChanged(System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.MaskedToggleButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.CheckedContentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.CheckedContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.CheckedSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.CheckedSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.CheckedToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.CheckedToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.ContentMarginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.ContentMargin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.GroupNameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.GroupName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.IsRippleEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.IsRippleEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.SourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.SourceColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.SourceColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.SourceHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.SourceHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.MaskedToggleButton.SourceWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.MaskedToggleButton.SourceWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.OnChecked(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.OnGroupNameChanged(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.MaskedToggleButton.OnSourceChanged(System.Windows.Media.ImageSource)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.FileBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.FileBox.FileBoxValidateHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.FileBoxValidateHandler.Validate(System.Object[])">
            <summary>
            
            </summary>
            <param name="Arguments"></param>
            <returns></returns>
        </member>
        <member name="E:Imagin.Controls.Common.FileBox.DialogOpened">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.BrowseButtonTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseButtonTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.BrowseButtonToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseButtonToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.BrowseModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseMode">
            <summary>
            Gets or sets the type of objects to browse.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.BrowseTitleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseTitle">
            <summary>
            Gets or sets the title of the dialog used to browse objects.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.CanBrowseProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.CanBrowse">
            <summary>
            Gets or sets whether or not browsing objects is enabled.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.CanValidateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.CanValidate">
            <summary>
            Gets or sets whether or not the input (or file or folder path) should be validated.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.IsValidProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.IsValid">
            <summary>
            If validation is enabled, gets whether or not the input (or file or folder path) is valid.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ShowBrowseButtonProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ShowBrowseButton">
            <summary>
            Gets or sets whether or not to show the button used to browse.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ValidateHandlerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ValidateHandler">
            <summary>
            If validation is enabled, gets or sets an object that implements <see cref="T:Imagin.Common.IValidate`1"/>, which is used to validate the input (or file or folder path).
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ValidityIndicatorTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ValidityIndicatorTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.FileBox.ValidityIndicatorToolTipProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.ValidityIndicatorToolTip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnBrowseModeChanged(Imagin.Common.DialogProviderMode)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnCanValidateChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnDialogOpened">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.FileBox.Browse">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.FileBox.BrowseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Line">
            <summary>
             A flexible separator.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.ContentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.Content">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.ContentStringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.ContentStringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.ContentTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.ContentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.OrientationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.StrokeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.Line.StrokeThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Line.StrokeThickness">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Line.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.RadioGroup">
            <summary>
            A container for similar RadioButtons.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RadioGroup.CornerRadiusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RadioGroup.CornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.RadioGroup.GroupNameProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.RadioGroup.GroupName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.RadioGroup.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ItemContainerStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ItemContainerStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ItemTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ItemTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ItemsSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ItemsSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.SetColumnWidth(System.Windows.DependencyObject,System.Windows.GridLength)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetColumnWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.MinColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.SetMinColumnWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetMinColumnWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.MaxColumnWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.SetMaxColumnWidth(System.Windows.DependencyObject,System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetMaxColumnWidth(System.Windows.DependencyObject)">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.ShowSplitterProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.ShowSplitter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.ResizableGrid.SplitterWidthProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ResizableGrid.SplitterWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.GetColumnDefinition(System.Windows.Controls.ContentPresenter,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnItemContainerStyleChanged(System.Windows.Style)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnItemsSourceChange(System.Collections.IEnumerable)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnItemTemplateChanged(System.Windows.DataTemplate)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ResizableGrid.OnSplitterWidthChanged(System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TimeSpanUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeSpanUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeSpanUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeSpanUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeSpanUpDown.IncrementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeSpanUpDown.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeSpanUpDown.SelectedPartProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.TimeSpanUpDown.SelectedPart"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeSpanUpDown.SelectedPart">
            <summary>
            Gets or sets the selected <see cref="T:Imagin.Common.Primitives.TimePart"/> of the <see cref="T:System.TimeSpan"/> value.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.OnSelectionChanged(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.ToString(System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TimeSpanUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TimeUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.TimeUpDown.OptionSelected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeUpDown.DropDownStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeUpDown.DropDownStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeUpDown.IsDropDownOpenProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeUpDown.IsDropDownOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeUpDown.MaxDropDownHeightProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeUpDown.MaxDropDownHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeUpDown.StaysOpenProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeUpDown.StaysOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TimeUpDown.StaysOpenOnSelectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TimeUpDown.StaysOpenOnSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TimeUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TimeUpDown.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TimeUpDown.OnDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TimeUpDown.OnIsDropDownOpenChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="T:Imagin.Controls.Common.DecimalUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DecimalUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.ToString(System.Decimal)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DecimalUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.IrrationalUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.IrrationalUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.IrrationalUpDown`1.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.RationalUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Imagin.Controls.Common.RationalUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.ByteUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.ByteUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.ToString(System.Byte)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.ByteUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.IUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.IUpDown`1.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.IUpDown`1.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.IUpDown`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.NumericUpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.DefaultIncrement">
            <summary>
            The default value to increment by.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NumericUpDown`1.IncrementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.Increment">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.NumericUpDown`1.StringFormatProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.NumericUpDown`1.StringFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NumericUpDown`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.NumericUpDown`1.OnIncrementChanged(`0)">
            <summary>
            Occurs when the increment value changes.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.NumericUpDown`1.OnStringFormatChanged(System.String)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.NumericUpDown`1.StringFormat"/> changes.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DateTimeUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.Increment">
            <summary>
            The value to increment by (e.g., if <see cref="P:Imagin.Controls.Common.DateTimeUpDown.SelectedPart" /> = <see cref="F:Imagin.Common.Primitives.DateTimePart.Month" /> and <see cref="P:Imagin.Controls.Common.DateTimeUpDown.Increment" /> = 3, increment by 3 months).
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.CalendarModeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.CalendarMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.KindProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.IsDropDownOpen"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.IsDropDownOpen">
            <summary>
            Gets or sets whether or not the drop down is open.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownAnimationProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownAnimation"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownAnimation">
            <summary>
            Gets or sets the drop down animation.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownPlacementProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownPlacement"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownPlacement">
            <summary>
            Gets or sets the drop down placement.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownStretchProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStretch"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStretch">
            <summary>
            Gets or sets the drop down stretch. If <see cref="F:System.Windows.Media.Stretch.None"/>, drop down width assumes width of it's content; if anything else, drop down width assumes width of parent, <see cref="T:Imagin.Controls.Common.DateTimeUpDown"/>.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.DropDownStyleProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStyle"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.DropDownStyle">
            <summary>
            Gets or sets style of drop down; style must target <see cref="T:System.Windows.Controls.Border"/> control.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.SelectedPartProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.SelectedPart"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.SelectedPart">
            <summary>
            Gets or sets the selected <see cref="T:Imagin.Common.Primitives.DateTimePart"/> of the <see cref="T:System.DateTime"/> value.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.StaysOpenProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpen"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpen">
            <summary>
            Gets or sets whether or not the drop down stays open when clicking neutral area outside of it.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.StaysOpenOnSelectionProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpenOnSelection"/> property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.StaysOpenOnSelection">
            <summary>
            Gets or sets whether or not the drop down stays open after making a selection.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.DateTimeUpDown.TimeOfDayProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DateTimeUpDown.TimeOfDay">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.Increase(System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnValueChanged(System.DateTime)">
            <summary>
            
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.ToString(System.DateTime)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnIsDropDownOpenChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnKindChanged(System.DateTimeKind)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.DateTimeUpDown.OnSelectedDatesChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.UInt32UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt32UpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt32UpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt32UpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt32UpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.ToString(System.UInt32)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt32UpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UInt64UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt64UpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt64UpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt64UpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt64UpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.ToString(System.UInt64)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt64UpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UInt16UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt16UpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt16UpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt16UpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UInt16UpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.ToString(System.UInt16)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UInt16UpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Int16UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16UpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16UpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16UpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int16UpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.ToString(System.Int16)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int16UpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown.UpDownTimer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpDownTimer.Milliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpDownTimer.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.UpDownTimer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown.UpDownDirection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpDownDirection.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpDownDirection.Up">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpDownDirection.Down">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.PART_Down">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.PART_Up">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.Timer">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.UpDown.PropertyChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.CanUpDownProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.CanUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.DirectionalChangeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.DirectionalChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.DownButtonTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.DownButtonTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.MajorChangeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.MajorChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.MajorChangeDelayProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.MajorChangeDelay">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown.UpButtonTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpButtonTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.UpDown"/> class.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.CanDecrease">
            <summary>
            Gets whether or not decreasing is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.CanIncrease">
            <summary>
            Gets whether or not increasing is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.Decrease">
            <summary>
            Decreases value by some value.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.RiseValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.SinkValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.Increase">
            <summary>
            Increases value by some value.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.DownCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown.UpCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.Change(Imagin.Controls.Common.UpDown.UpDownDirection)">
            <summary>
            Increase or decrease based on given direction.
            </summary>
            <param name="Direction"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.ResetTimer">
            <summary>
            Reset the timer used for making major changes.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.SetText(System.String)">
            <summary>
            Set text; string format should be applied prior to calling.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnButtonMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the mouse presses the increase or decrease button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnButtonMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when the mouse releases the increase or decrease button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnMajorChange(System.Object,System.EventArgs)">
            <summary>
            Occurs during a major change.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnMajorChangeChanged(System.Double)">
            <summary>
            Occurs when <see cref="P:Imagin.Controls.Common.UpDown.MajorChange"/> changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown.OnPropertyChanged(System.String)">
            <summary>
            Occurs when a property changes.
            </summary>
            <param name="Name"></param>
        </member>
        <member name="T:Imagin.Controls.Common.TreeViewComboBox">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.TreeViewComboBox.SelectedItemChanged">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TreeViewComboBox.ContentTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TreeViewComboBox.ContentTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewComboBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewComboBox.OnSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewComboBox.OnSelectedItemChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TreeViewComboBox.OnApplyTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.TextBox">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.TextBox.Entered">
            <summary>
            
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.TextBox.TripleClick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.ClearButtonTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.ClearButtonTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.CharacterMaskForegroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.CharacterMaskForeground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.EnterButtonTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.EnterButtonTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.InnerPaddingProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.InnerPadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.IsClearEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.IsClearEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.IsCharacterMaskingEnabledProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.IsCharacterMaskingEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.PlaceholderProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.Placeholder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.PlaceholderStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.PlaceholderStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.ScrollViewerTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.ScrollViewerTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.SelectAllOnFocusProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.SelectAllOnFocus">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.SelectAllOnTripleClickProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.SelectAllOnTripleClick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.ShowEnterButtonProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.ShowEnterButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.ShowToggleButtonProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.ShowToggleButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.TextBox.ToggleButtonTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.ToggleButtonTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.ClearCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.TextBox.EnterCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnEntered(System.String)">
            <summary>
            
            </summary>
            <param name="Text"></param>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnPreviewMouseLeftButtonDownHandled(System.Windows.Input.MouseButtonEventArgs,System.Type[])">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="HandledTypes"></param>
            <returns></returns>
            <remarks>
            Normally, focus is obtained when left mouse button is pressed.
            When clicking buttons that might be contained in the template,
            focus is obtained first, thus, requiring a second click in 
            order to actually click the button. To prevent this, we must
            detect whether or not the intention is to click a button or 
            focus. Therefore, if the element clicked IS a button, handle 
            the focus; otherwise, focus!
            </remarks>
        </member>
        <member name="M:Imagin.Controls.Common.TextBox.OnTripleClick(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.UpDown`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.TextChangeHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.ValueChangeHandled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.AbsoluteMaximum">
            <summary>
            The absolute maximum value possible.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.AbsoluteMinimum">
            <summary>
            The absolute minimum value possible.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.DefaultValue">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown`1.MaximumProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown`1.MinimumProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.UpDown`1.ValueProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.UpDown`1.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imagin.Controls.Common.UpDown"/> class.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.ToString(`0)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Occurs when the text changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.RiseValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.SinkValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMaximumChanged(`0)">
            <summary>
            Occurs when the maximum value changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnMinimumChanged(`0)">
            <summary>
            Occurs when the minimum value changes.
            </summary>
            <param name="Value"></param>
        </member>
        <member name="M:Imagin.Controls.Common.UpDown`1.OnValueChanged(`0)">
            <summary>
            Occurs when the value changes.
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.DoubleUpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.DoubleUpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.ToString(System.Double)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.DoubleUpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Int32UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32UpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32UpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32UpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int32UpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.ToString(System.Int32)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int32UpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.Int64UpDown">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64UpDown.AbsoluteMaximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64UpDown.AbsoluteMinimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64UpDown.DefaultIncrement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.Int64UpDown.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.GetValue(System.String)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.ToString(System.Int64)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.CanIncrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.CanDecrease">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.OnMaximumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.OnMinimumCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.OnValueCoerced(System.Object)">
            <summary>
            
            </summary>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.Increase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.Int64UpDown.Decrease">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.WindowSinker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowSinker.#ctor(System.Windows.Window)">
            <summary>
            
            </summary>
            <param name="Window"></param>
        </member>
        <member name="M:Imagin.Controls.Common.WindowSinker.Sink">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowSinker.Unsink">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.BasicWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ButtonsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.Buttons">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ButtonsPanelProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ButtonsPanel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ButtonStyleProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ButtonStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentBackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentBorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentBorderBrush">
            <summary>
            Gets or sets the border brush of the content.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentBorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentBorderThickness">
            <summary>
            Gets or sets the border thickness of the content.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ContentMarginProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ContentMargin">
            <summary>
            Gets or sets the outer margin of the content.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.FooterTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.FooterTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.HeaderBackgroundProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.HeaderBackground">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.HeaderBorderBrushProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.HeaderBorderBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.HeaderBorderThicknessProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.HeaderBorderThickness">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.HeaderVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.HeaderVisibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.IconTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.IconTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.OverlayTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.OverlayTemplate">
            <summary>
            Element to place on top of everything else; element covers entire window.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.OverlayVisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.OverlayVisibility">
            <summary>
            The visibility of the overlay element.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.ResizeGripTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.ResizeGripTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.TitleTemplateProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.TitleTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.BasicWindow.TypeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.BasicWindow.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BasicWindow.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.BasicWindow.#ctor(System.Action)">
            <summary>
            
            </summary>
            <param name="OnClosed"></param>
        </member>
        <member name="T:Imagin.Controls.Common.WindowFooter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowFooter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.WindowBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowBase.Result">
            <summary>
            The result of the window subsequent to closing.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Closed">
            <summary>
            Occurs when the window is about to close.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Closing">
            <summary>
            Occurs directly after <see cref="M:System.Windows.Window.Close"/> is called, and can be handled to cancel window closure.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.FirstLoad">
            <summary>
            Occurs when the window is loaded for the first time.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Hidden">
            <summary>
            Occurs when the window is hidden.
            </summary>
        </member>
        <member name="E:Imagin.Controls.Common.WindowBase.Shown">
            <summary>
            Occurs when a window is shown.
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowBase.CornerRadiusProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.WindowBase.CornerRadius"/> dependency property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.CornerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowBase.IsHiddenProperty">
            <summary>
            Identifies the <see cref="P:Imagin.Controls.Common.WindowBase.IsHidden"/> dependency property.
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.IsHidden">
            <summary>
            Whether or not the window is currently hidden.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.BeginCloseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.CloseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.HideCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.MaximizeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.MinimizeCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.RestoreCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Imagin.Controls.Common.WindowBase.ShowCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.BeginClose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="SupportsCancellation"></param>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.Close(System.Boolean)">
            <summary>
            Manually closes a window.
            </summary>
            <param name="SupportsCancellation">Whether or not cancellation is supported.</param>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.Hide">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.Show">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.ShowDialog">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnBeginClosed(System.Int32)">
            <summary>
            Occurs when the window is about to close (async).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnBeginClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs directly after <see cref="M:System.Windows.Window.Close"/> is called, and can be handled to cancel window closure (async).
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnClosed(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnClosed(System.Int32)">
            <summary>
            Occurs when the window is about to close.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Occurs directly after <see cref="M:System.Windows.Window.Close"/> is called, and can be handled to cancel window closure.
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnFirstLoad">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnHidden">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnLoaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnShown">
            <summary>
            
            </summary>
        </member>
        <member name="M:Imagin.Controls.Common.WindowBase.OnUnloaded(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Imagin.Controls.Common.WindowLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowLocation.CenterOwner">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowLocation.CenterScreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowLocation.Manual">
            <summary>
            
            </summary>
        </member>
        <member name="T:Imagin.Controls.Common.WindowType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowType.Window">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowType.Tool">
            <summary>
            
            </summary>
        </member>
        <member name="F:Imagin.Controls.Common.WindowType.Blank">
            <summary>
            
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
