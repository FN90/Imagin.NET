<Application 
    x:Class="Imagin.Search.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Gadgets.Search"
    StartupUri="SearchGadget.xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Controls.Common="clr-namespace:Imagin.Controls.Common;assembly=Imagin.Controls.Common"
    xmlns:Common.Data.Converters="clr-namespace:Imagin.Common.Data.Converters;assembly=Imagin.Common">
    <Application.Resources>
        <ResourceDictionary>
            <System:Double x:Key="DisabledOpacity">0.4</System:Double>

            <Common.Data.Converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
            <Common.Data.Converters:NullObjectToVisibilityConverter x:Key="NullObjectToVisibilityConverter"/>

            <Style x:Key="{x:Type Controls.Common:AdvancedTextBox}" TargetType="{x:Type Controls.Common:AdvancedTextBox}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="3,5" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ReadOnlyTextBoxBackground}" />
                        <Setter Property="Foreground" Value="{DynamicResource ReadOnlyTextBoxForeground}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ReadOnlyTextBoxBorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="Template.ComboBox" TargetType="{x:Type ComboBox}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton 
                x:Name="ToggleButton" 
                Grid.ColumnSpan="2" 
                Foreground="{TemplateBinding Foreground}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                Focusable="false" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                ClickMode="Press">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Border 
                                x:Name="Border" 
                                Grid.ColumnSpan="2" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                                    <Border 
                                x:Name="PART_Two"
                                Grid.Column="0" 
                                CornerRadius="0" 
                                Margin="1"/>
                                    <Path 
                                x:Name="Arrow" 
                                Grid.Column="1" 
                                Fill="{TemplateBinding Foreground}" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" 
                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                                </Grid>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                    <ContentPresenter 
                Grid.Column="0"
                Margin="8,0,21,0"  
                x:Name="ContentSite" 
                IsHitTestVisible="False" 
                Content="{TemplateBinding SelectionBoxItem}" 
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                VerticalAlignment="Center" 
                HorizontalAlignment="Left">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                    <Controls.Common:AdvancedTextBox 
                Grid.Column="0"
                x:Name="PART_EditableTextBox" 
                Focusable="True" 
                Background="Transparent" 
                BorderThickness="0"
                Foreground="{TemplateBinding Foreground}" 
                Visibility="Hidden" 
                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    <Popup 
                x:Name="Popup" 
                Placement="Bottom" 
                IsOpen="{TemplateBinding IsDropDownOpen}" 
                AllowsTransparency="True"
                Focusable="False" 
                PopupAnimation="Slide">
                        <Grid 
                    x:Name="DropDown" 
                    SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding ActualWidth}" 
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border 
                        x:Name="DropDownBorder" 
                        Background="{DynamicResource ComboBoxDropDownBackground}" 
                        BorderThickness="1"
                        BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"/>
                            <ScrollViewer Margin="1,2,1,1" SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="False">
                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="125" />
                    </Trigger>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="Style.ComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsGrouping" Value="True">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                    </Trigger>
                    <Trigger Property="IsEditable" Value="True">
                        <Setter Property="IsTabStop" Value="False" />
                    </Trigger>
                    <Trigger Property="IsDropDownOpen" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource ComboBoxCheckedForeground}"/>
                        <Setter Property="Background" Value="{DynamicResource ComboBoxCheckedBackground}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxCheckedBorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource Style.ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template" Value="{StaticResource Template.ComboBox}"/>
            </Style>

            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter Margin="6,5" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxItemIsHighlightedBackground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <Setter Property="Foreground" Value="{DynamicResource ToolTipForeground}" />
                <Setter Property="Background" Value="{DynamicResource ToolTipBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderBrush}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Placement" Value="Bottom" />
                <Setter Property="Opacity" Value="0.95" />
                <Setter Property="Padding" Value="15,7" />
            </Style>

            <Style x:Key="{x:Type Controls.Common:MaskedImage}" TargetType="{x:Type Controls.Common:MaskedImage}">
                <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type Controls.Common:MaskedButton}" TargetType="{x:Type Controls.Common:MaskedButton}">
                <Setter Property="Background" Value="Transparent" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ImageColor" Value="{DynamicResource ImageHoverBrush}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="ImageColor" Value="{DynamicResource ImagePressedBrush}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False"/>
                            <Condition Property="IsPressed" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ImageColor" Value="{DynamicResource ImageBrush}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Imagin.Gadgets.Search;component/Styles/Brushes.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
