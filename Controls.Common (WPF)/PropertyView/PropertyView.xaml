<ContentControl 
    x:Class="Imagin.Controls.Common.PropertyView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:l="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Controls.Common"
    xmlns:Common="http://imagin.tech/imagin/common"
    xmlns:Common.Portable="clr-namespace:Imagin.Common;assembly=Imagin.Common"
    xmlns:Converters="clr-namespace:Imagin.Controls.Common.Converters"
    xmlns:Linq="clr-namespace:Imagin.Controls.Common.Extensions"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:System.2="clr-namespace:System;assembly=System"
    xmlns:System.Collections="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:System.ComponentModel="clr-namespace:System.ComponentModel;assembly=System"
    xmlns:System.Net="clr-namespace:System.Net;assembly=System"
    xmlns:System.Windows="clr-namespace:System.Windows;assembly=WindowsBase"
    xmlns:System.Windows.Media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
    mc:Ignorable="d" 
    d:DesignHeight="300" 
    d:DesignWidth="300"
    Content="{Binding Property, Mode=OneWay, RelativeSource={RelativeSource Self}}"
    IsEnabled="{Binding Property.IsEnabled, Mode=OneWay, RelativeSource={RelativeSource Self}}">
    <ContentControl.ContentTemplateSelector>
        <local:PropertyTemplateSelector>
            <local:PropertyTemplateSelector.Resources>
                <ResourceDictionary>
                    <!-- ........................................................ Converters -->
                    
                    <Common:DisplayNameAttributeConverter x:Key="DisplayNameAttributeConverter"/>
                    <Common:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                    <Common:FileSizeMultiValueConverter x:Key="FileSizeMultiValueConverter"/>
                    <Common:RelativeTimeConverter x:Key="RelativeTimeConverter"/>
                    <Common:SolidColorBrushToHexConverter x:Key="SolidColorBrushToHexConverter"/>

                    <!-- ........................................................ Templates -->

                    <!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Numeric -->
                    <DataTemplate x:Key="{x:Type System:Byte}">
                        <local:ByteUpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Decimal}">
                        <local:DecimalUpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Double}">
                        <local:DoubleUpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Int16}">
                        <local:Int16UpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Int32}">
                        <local:Int32UpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Int64}">
                        <ContentControl x:Name="PART_Content">
                            <local:Int64UpDown 
                                HorizontalAlignment="Stretch"
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                Maximum="{Binding Maximum}"
                                Minimum="{Binding Minimum}"
                                StringFormat="{Binding StringFormat}"
                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Tag}" Value="FileSize">
                                <Setter TargetName="PART_Content" Property="Content">
                                    <Setter.Value>
                                        <TextBlock Margin="0,10">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource FileSizeMultiValueConverter}">
                                                    <Binding Path="Value" Mode="OneWay"/>
                                                    <Binding Path="Data.FileSizeFormat" Source="{StaticResource BindingProxy}"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:UInt16}">
                        <local:UInt16UpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:UInt32}">
                        <local:UInt32UpDown 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                            CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Maximum="{Binding Maximum}"
                            Minimum="{Binding Minimum}"
                            StringFormat="{Binding StringFormat}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:UInt64}">
                        <ContentControl x:Name="PART_Content">
                            <local:UInt64UpDown 
                                HorizontalAlignment="Stretch"
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                Maximum="{Binding Maximum}"
                                Minimum="{Binding Minimum}"
                                StringFormat="{Binding StringFormat}"
                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Tag}" Value="FileSize">
                                <Setter TargetName="PART_Content" Property="Content">
                                    <Setter.Value>
                                        <TextBlock Margin="0,10">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource FileSizeMultiValueConverter}">
                                                    <Binding Path="Value" Mode="OneWay"/>
                                                    <Binding Path="Data.FileSizeFormat" Source="{StaticResource BindingProxy}"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Nested -->
                    <DataTemplate x:Key="{x:Type System:Object}">
                        <ContentControl
                            Content="{Binding Mode=OneWay}"
                            ContentStringFormat="{Binding Data.NestedPropertyStringFormat, Source={StaticResource BindingProxy}}"
                            ContentTemplate="{Binding Data.NestedPropertyTemplate, Source={StaticResource BindingProxy}}"
                            ContentTemplateSelector="{Binding Data.NestedPropertyTemplateSelector, Source={StaticResource BindingProxy}}"/>
                    </DataTemplate>

                    <!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Other -->
                    <DataTemplate x:Key="{x:Type System:Boolean}">
                        <CheckBox 
                            HorizontalAlignment="Left" 
                            IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Margin="0,5"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.Collections:IList}">
                        <Grid/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:DateTime}">
                        <ContentControl 
                            x:Name="PART_Content"
                            Content="{Binding Mode=OneWay}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <local:DateTimeUpDown 
                                        HorizontalAlignment="Stretch"
                                        Maximum="{Binding Maximum}"
                                        Minimum="{Binding Minimum}"
                                        Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                    <Condition Binding="{Binding Tag}" Value="Default"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock
                                                Margin="0,5"
                                                Text="{Binding Value, Mode=OneWay}"
                                                ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                    <Condition Binding="{Binding Tag}" Value="Relative"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock
                                                Margin="0,5"
                                                Text="{Binding Value, Converter={StaticResource RelativeTimeConverter}, Mode=OneWay}"
                                                TextTrimming="CharacterEllipsis"
                                                ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Enum}">
                        <ContentControl x:Name="PART_Content">
                            <ComboBox
                                IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                ItemsSource="{Common:EnumerateBinding Value}" 
                                SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                VirtualizingPanel.IsVirtualizing="True" 
                                VirtualizingPanel.VirtualizationMode="Recycling">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <local:LocalizedTextBlock 
                                            Text="{Binding Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Tag}" Value="Flags">
                                <Setter TargetName="PART_Content" Property="Content">
                                    <Setter.Value>
                                        <local:FlagCheckView
                                            Flags="{Binding Value,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                            Margin="0,10,0,0">
                                            <local:FlagCheckView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel/>
                                                </ItemsPanelTemplate>
                                            </local:FlagCheckView.ItemsPanel>
                                            <local:FlagCheckView.ItemTemplate>
                                                <DataTemplate>
                                                    <CheckBox
                                                        IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Margin="0,0,0,10">
                                                        <CheckBox.Content>
                                                            <local:LocalizedTextBlock 
                                                                Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                                                TextTrimming="CharacterEllipsis"/>
                                                        </CheckBox.Content>
                                                        <CheckBox.ToolTip>
                                                            <local:LocalizedTextBlock 
                                                                Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"/>
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>
                                                </DataTemplate>
                                            </local:FlagCheckView.ItemTemplate>
                                        </local:FlagCheckView>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReadOnly}" Value="True"/>
                                    <Condition Binding="{Binding Tag}" Value="Default"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_Content" Property="Content">
                                    <Setter.Value>
                                        <local:LocalizedTextBlock 
                                            Margin="0,5"
                                            Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis">
                                            <local:LocalizedTextBlock.ToolTip>
                                                <local:LocalizedTextBlock Text="{Binding Value, Converter={StaticResource DisplayNameAttributeConverter}, Mode=OneWay}"/>
                                            </local:LocalizedTextBlock.ToolTip>
                                        </local:LocalizedTextBlock>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.Windows.Media:LinearGradientBrush}">
                        <local:GradientChip 
                            Height="25"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Width="Auto"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Guid}">
                        <local:RegexBox 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                            Pattern="^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
                            Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.Net:NetworkCredential}">
                        <StackPanel IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                            <local:TextBox
                                Margin="0,0,0,5"
                                Placeholder="{l:Loc Username}"
                                Text="{Binding Value.UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <local:TextBox
                                IsCharacterMaskingEnabled="True"
                                Placeholder="{l:Loc Password}"
                                ShowToggleButton="True"
                                Text="{Binding Value.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.Windows:Point}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <local:DoubleUpDown 
                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                Margin="0,0,5,0"
                                Minimum="{Binding Minimum.X}"
                                StringFormat="{Binding StringFormat}"
                                ToolTip="{l:Loc X}"
                                Value="{Binding Variant.X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <local:DoubleUpDown 
                                Grid.Column="1"
                                Grid.Row="1"
                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                Minimum="{Binding Minimum.Y}"
                                StringFormat="{Binding StringFormat}"
                                ToolTip="{l:Loc Y}"
                                Value="{Binding Variant.Y, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.Windows:Size}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <local:DoubleUpDown
                                x:Name="PART_Width"
                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                Minimum="0"
                                StringFormat="{Binding StringFormat}"
                                ToolTip="{l:Loc Width}"
                                Value="{Binding Variant.Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <local:MaskedToggleButton
                                Grid.Column="1"
                                CheckedSource="pack://application:,,,/Imagin.Controls.Common.Wpf;component/Images/LinkHorizontal.png"
                                CheckedToolTip="{l:Loc Unbind}"
                                IsChecked="{Binding Tag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Padding="7,0"
                                ToolTip="{l:Loc Bind}"/>
                            <local:DoubleUpDown
                                Grid.Column="2"
                                x:Name="PART_Height"
                                CanUpDown="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                Minimum="0"
                                StringFormat="{Binding StringFormat}"
                                ToolTip="{l:Loc Height}"
                                Value="{Binding Variant.Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.Windows.Media:SolidColorBrush}">
                        <Grid IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <local:ColorChip
                                Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                Width="25" 
                                Height="25" 
                                Margin="0,0,5,0"/>
                            <local:AlphaNumericBox
                                Grid.Column="1"  
                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                MaxLength="8"
                                Text="{Binding Value, Mode=TwoWay, Converter={StaticResource SolidColorBrushToHexConverter}, UpdateSourceTrigger=LostFocus}"/>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:String}">
                        <ContentControl 
                            x:Name="PART_Content"
                            Content="{Binding Mode=OneWay}">
                            <ContentControl.ContentTemplate>
                                <DataTemplate>
                                    <local:TextBox 
                                        HorizontalAlignment="Stretch"
                                        IsClearEnabled="True"
                                        IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                        Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </ContentControl.ContentTemplate>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Tag, UpdateSourceTrigger=PropertyChanged}" Value="FilePath">
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <local:FileBox  
                                                BrowseMode="OpenFile"
                                                CanBrowse="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                HorizontalAlignment="Stretch"
                                                IsClearEnabled="True"
                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, UpdateSourceTrigger=PropertyChanged}" Value="FolderPath">
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <local:FileBox  
                                                BrowseMode="OpenFolder"
                                                CanBrowse="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                                                HorizontalAlignment="Stretch"
                                                IsClearEnabled="True"
                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, UpdateSourceTrigger=PropertyChanged}" Value="Multiline">
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <local:TextBox 
                                                AcceptsReturn="True"
                                                Height="Auto"
                                                HorizontalAlignment="Stretch"
                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                                                Padding="5,7"
                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                TextBlock.LineStackingStrategy="BlockLineHeight"
                                                TextBlock.LineHeight="15"
                                                VerticalContentAlignment="Top"
                                                TextWrapping="Wrap"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, UpdateSourceTrigger=PropertyChanged}" Value="Password">
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <local:TextBox 
                                                IsCharacterMaskingEnabled="True"
                                                IsClearEnabled="True"
                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                ShowToggleButton="True"
                                                Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                HorizontalAlignment="Stretch"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Tag, UpdateSourceTrigger=PropertyChanged}" Value="Tokens">
                                <Setter TargetName="PART_Content" Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <local:TokenView 
                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                HorizontalAlignment="Stretch"
                                                TokensSource="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System.2:Uri}">
                        <local:UriBox 
                            HorizontalAlignment="Stretch"
                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}" 
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Type System:Version}">
                        <local:VersionBox
                            HorizontalAlignment="Stretch"
                            IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}, Mode=OneWay}"
                            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </DataTemplate>
                </ResourceDictionary>
            </local:PropertyTemplateSelector.Resources>
        </local:PropertyTemplateSelector>
    </ContentControl.ContentTemplateSelector>
</ContentControl>
